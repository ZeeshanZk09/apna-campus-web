
model User {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  username   String?
  role       Role     @default(USER)
  profilePic String?
  coverPic   String?
  isBlocked  Boolean  @default(false)
  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // app relations
  submissions     Submission[]
  posts           Post[]         @relation("PostUser")
  comments        Comment[]      @relation("CommentUser")
  follows         Follow[]       @relation("UserFollowers")
  followings      Follow[]       @relation("UserFollowings")
  apiKeys         ApiKey[]
  auditLogs       AuditLog[]     @relation("AuditLogUser")
  Enrollment      Enrollment[]
  Notification    Notification[] @relation("NotificationUser")
  Asset           Asset[]
  session         Session[]
  // chat relations
  createdConversations     Conversation[]            @relation("ConversationCreatedByUser")
  conversationParticipants ConversationParticipant[]
  messagesSent             Message[]                 @relation("MessageSender")
  readReceipts             MessageReadReceipt[]      @relation("MessageReadReceiptUser")
  parentChildren           ParentChild[]             @relation("ParentChildren")
  childParents             ParentChild[]             @relation("ChildParents")
}

model Session {
  id Int @id @default(autoincrement())
  ip String
  userId  String @db.Uuid
  user  User @relation(fields: [userId], references: [id])
}

model Admin {
  id         String     @id @default(uuid())
  firstName  String
  lastName   String?
  email      String @unique
  password   String
  profilePic String?
  coverPic   String?
  isBlocked  Boolean    @default(false)
  isDeleted  Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  // relations created/managed by admin
  posts         Post[]         @relation("PostAdmin")
  comments      Comment[]      @relation("CommentAdmin")
  auditLogs     AuditLog[]     @relation("AuditLogAdmin")
  conversation  Conversation[] @relation("ConversationCreatedByAdmin")
  message       Message[]      @relation("MessageSenderAdmin")
  notifications Notification[] @relation("NotificationAdmin")
}

model ApiKey {
  id        String    @id @default(uuid())
  userId    String
  name      String
  key       String    @unique
  expiresAt DateTime?
  revoked   Boolean   @default(false)
  createdAt DateTime  @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Follow {
  id          String   @id @default(uuid())
  followerId  String
  followingId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  follower  User @relation("UserFollowers", fields: [followerId], references: [id])
  following User @relation("UserFollowings", fields: [followingId], references: [id])

  @@index([followerId, followingId])
}

model AuditLog {
  id         String   @id @default(uuid())
  userId     String?
  adminId    String?
  action     String
  resource   String?
  resourceId String?
  meta       Json?
  ip         String?
  createdAt  DateTime @default(now())

  user  User?  @relation("AuditLogUser", fields: [userId], references: [id])
  admin Admin? @relation("AuditLogAdmin", fields: [adminId], references: [id])

  @@index([userId, resource, resourceId])
}
