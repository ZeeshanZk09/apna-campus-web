
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  Institute: 'Institute',
  Setting: 'Setting',
  Integration: 'Integration',
  User: 'User',
  Session: 'Session',
  Admin: 'Admin',
  ApiKey: 'ApiKey',
  Follow: 'Follow',
  AuditLog: 'AuditLog',
  Conversation: 'Conversation',
  ConversationParticipant: 'ConversationParticipant',
  Message: 'Message',
  MessageReadReceipt: 'MessageReadReceipt',
  ParentChild: 'ParentChild',
  Notification: 'Notification',
  Post: 'Post',
  Comment: 'Comment',
  Asset: 'Asset',
  Department: 'Department',
  Program: 'Program',
  Course: 'Course',
  Subject: 'Subject',
  Lesson: 'Lesson',
  Cohort: 'Cohort',
  Classroom: 'Classroom',
  Enrollment: 'Enrollment',
  Attendance: 'Attendance',
  Assignment: 'Assignment',
  Submission: 'Submission',
  Evaluation: 'Evaluation',
  Attachment: 'Attachment',
  Exam: 'Exam',
  ExamResult: 'ExamResult',
  Fee: 'Fee',
  Invoice: 'Invoice',
  Payment: 'Payment'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const InstituteScalarFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  timezone: 'timezone',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type InstituteScalarFieldEnum = (typeof InstituteScalarFieldEnum)[keyof typeof InstituteScalarFieldEnum]


export const SettingScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  key: 'key',
  value: 'value',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type SettingScalarFieldEnum = (typeof SettingScalarFieldEnum)[keyof typeof SettingScalarFieldEnum]


export const IntegrationScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  provider: 'provider',
  config: 'config',
  enabled: 'enabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type IntegrationScalarFieldEnum = (typeof IntegrationScalarFieldEnum)[keyof typeof IntegrationScalarFieldEnum]


export const UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  username: 'username',
  role: 'role',
  Gender: 'Gender',
  profilePic: 'profilePic',
  coverPic: 'coverPic',
  isBlocked: 'isBlocked',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const SessionScalarFieldEnum = {
  id: 'id',
  ip: 'ip',
  refreshToken: 'refreshToken',
  userId: 'userId',
  expiresAt: 'expiresAt'
} as const

export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


export const AdminScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  profilePic: 'profilePic',
  coverPic: 'coverPic',
  isBlocked: 'isBlocked',
  isDeleted: 'isDeleted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


export const ApiKeyScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  key: 'key',
  expiresAt: 'expiresAt',
  revoked: 'revoked',
  createdAt: 'createdAt'
} as const

export type ApiKeyScalarFieldEnum = (typeof ApiKeyScalarFieldEnum)[keyof typeof ApiKeyScalarFieldEnum]


export const FollowScalarFieldEnum = {
  id: 'id',
  followerId: 'followerId',
  followingId: 'followingId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type FollowScalarFieldEnum = (typeof FollowScalarFieldEnum)[keyof typeof FollowScalarFieldEnum]


export const AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  adminId: 'adminId',
  action: 'action',
  resource: 'resource',
  resourceId: 'resourceId',
  meta: 'meta',
  ip: 'ip',
  createdAt: 'createdAt'
} as const

export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


export const ConversationScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  type: 'type',
  title: 'title',
  isPrivate: 'isPrivate',
  createdByUserId: 'createdByUserId',
  createdByAdminId: 'createdByAdminId',
  metadata: 'metadata',
  lastMessageId: 'lastMessageId',
  lastMessageAt: 'lastMessageAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ConversationScalarFieldEnum = (typeof ConversationScalarFieldEnum)[keyof typeof ConversationScalarFieldEnum]


export const ConversationParticipantScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  userId: 'userId',
  joinedAt: 'joinedAt',
  role: 'role',
  mutedUntil: 'mutedUntil',
  canWrite: 'canWrite',
  canViewHistory: 'canViewHistory'
} as const

export type ConversationParticipantScalarFieldEnum = (typeof ConversationParticipantScalarFieldEnum)[keyof typeof ConversationParticipantScalarFieldEnum]


export const MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  senderUserId: 'senderUserId',
  senderAdminId: 'senderAdminId',
  content: 'content',
  attachments: 'attachments',
  system: 'system',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


export const MessageReadReceiptScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  userId: 'userId',
  readAt: 'readAt'
} as const

export type MessageReadReceiptScalarFieldEnum = (typeof MessageReadReceiptScalarFieldEnum)[keyof typeof MessageReadReceiptScalarFieldEnum]


export const ParentChildScalarFieldEnum = {
  id: 'id',
  parentId: 'parentId',
  childId: 'childId',
  relation: 'relation',
  createdAt: 'createdAt'
} as const

export type ParentChildScalarFieldEnum = (typeof ParentChildScalarFieldEnum)[keyof typeof ParentChildScalarFieldEnum]


export const NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  adminId: 'adminId',
  instituteId: 'instituteId',
  conversationId: 'conversationId',
  title: 'title',
  body: 'body',
  read: 'read',
  meta: 'meta',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


export const PostScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  title: 'title',
  content: 'content',
  images: 'images',
  likes: 'likes',
  userId: 'userId',
  adminId: 'adminId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


export const CommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  userId: 'userId',
  adminId: 'adminId',
  assignmentId: 'assignmentId',
  postId: 'postId',
  instituteId: 'instituteId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


export const AssetScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  url: 'url',
  key: 'key',
  mimeType: 'mimeType',
  size: 'size',
  createdById: 'createdById',
  createdAt: 'createdAt'
} as const

export type AssetScalarFieldEnum = (typeof AssetScalarFieldEnum)[keyof typeof AssetScalarFieldEnum]


export const DepartmentScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  name: 'name',
  code: 'code',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type DepartmentScalarFieldEnum = (typeof DepartmentScalarFieldEnum)[keyof typeof DepartmentScalarFieldEnum]


export const ProgramScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  departmentId: 'departmentId',
  name: 'name',
  code: 'code',
  durationMonths: 'durationMonths',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ProgramScalarFieldEnum = (typeof ProgramScalarFieldEnum)[keyof typeof ProgramScalarFieldEnum]


export const CourseScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  programId: 'programId',
  departmentId: 'departmentId',
  code: 'code',
  title: 'title',
  description: 'description',
  creditHours: 'creditHours',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type CourseScalarFieldEnum = (typeof CourseScalarFieldEnum)[keyof typeof CourseScalarFieldEnum]


export const SubjectScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  title: 'title',
  code: 'code',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type SubjectScalarFieldEnum = (typeof SubjectScalarFieldEnum)[keyof typeof SubjectScalarFieldEnum]


export const LessonScalarFieldEnum = {
  id: 'id',
  subjectId: 'subjectId',
  title: 'title',
  content: 'content',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type LessonScalarFieldEnum = (typeof LessonScalarFieldEnum)[keyof typeof LessonScalarFieldEnum]


export const CohortScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  programId: 'programId',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type CohortScalarFieldEnum = (typeof CohortScalarFieldEnum)[keyof typeof CohortScalarFieldEnum]


export const ClassroomScalarFieldEnum = {
  id: 'id',
  cohortId: 'cohortId',
  name: 'name',
  capacity: 'capacity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ClassroomScalarFieldEnum = (typeof ClassroomScalarFieldEnum)[keyof typeof ClassroomScalarFieldEnum]


export const EnrollmentScalarFieldEnum = {
  id: 'id',
  cohortId: 'cohortId',
  userId: 'userId',
  status: 'status',
  enrolledAt: 'enrolledAt',
  leftAt: 'leftAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type EnrollmentScalarFieldEnum = (typeof EnrollmentScalarFieldEnum)[keyof typeof EnrollmentScalarFieldEnum]


export const AttendanceScalarFieldEnum = {
  id: 'id',
  enrollmentId: 'enrollmentId',
  date: 'date',
  status: 'status',
  note: 'note',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AttendanceScalarFieldEnum = (typeof AttendanceScalarFieldEnum)[keyof typeof AttendanceScalarFieldEnum]


export const AssignmentScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  title: 'title',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AssignmentScalarFieldEnum = (typeof AssignmentScalarFieldEnum)[keyof typeof AssignmentScalarFieldEnum]


export const SubmissionScalarFieldEnum = {
  id: 'id',
  assignmentId: 'assignmentId',
  studentId: 'studentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type SubmissionScalarFieldEnum = (typeof SubmissionScalarFieldEnum)[keyof typeof SubmissionScalarFieldEnum]


export const EvaluationScalarFieldEnum = {
  id: 'id',
  assignmentId: 'assignmentId',
  studentId: 'studentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type EvaluationScalarFieldEnum = (typeof EvaluationScalarFieldEnum)[keyof typeof EvaluationScalarFieldEnum]


export const AttachmentScalarFieldEnum = {
  id: 'id',
  assignmentId: 'assignmentId',
  url: 'url',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AttachmentScalarFieldEnum = (typeof AttachmentScalarFieldEnum)[keyof typeof AttachmentScalarFieldEnum]


export const ExamScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  title: 'title',
  type: 'type',
  maxMarks: 'maxMarks',
  passingMarks: 'passingMarks',
  date: 'date',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ExamScalarFieldEnum = (typeof ExamScalarFieldEnum)[keyof typeof ExamScalarFieldEnum]


export const ExamResultScalarFieldEnum = {
  id: 'id',
  examId: 'examId',
  enrollmentId: 'enrollmentId',
  marks: 'marks',
  grade: 'grade',
  remarks: 'remarks',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ExamResultScalarFieldEnum = (typeof ExamResultScalarFieldEnum)[keyof typeof ExamResultScalarFieldEnum]


export const FeeScalarFieldEnum = {
  id: 'id',
  instituteId: 'instituteId',
  title: 'title',
  amount: 'amount',
  type: 'type',
  dueDate: 'dueDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type FeeScalarFieldEnum = (typeof FeeScalarFieldEnum)[keyof typeof FeeScalarFieldEnum]


export const InvoiceScalarFieldEnum = {
  id: 'id',
  feeId: 'feeId',
  enrollmentId: 'enrollmentId',
  invoiceNo: 'invoiceNo',
  amount: 'amount',
  status: 'status',
  issuedAt: 'issuedAt',
  paidAt: 'paidAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type InvoiceScalarFieldEnum = (typeof InvoiceScalarFieldEnum)[keyof typeof InvoiceScalarFieldEnum]


export const PaymentScalarFieldEnum = {
  id: 'id',
  invoiceId: 'invoiceId',
  provider: 'provider',
  providerRef: 'providerRef',
  amount: 'amount',
  status: 'status',
  paidAt: 'paidAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const JsonNullValueInput = {
  JsonNull: JsonNull
} as const

export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

