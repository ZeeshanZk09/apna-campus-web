
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Message` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Message
 * 
 */
export type MessageModel = runtime.Types.Result.DefaultSelection<Prisma.$MessagePayload>

export type AggregateMessage = {
  _count: MessageCountAggregateOutputType | null
  _min: MessageMinAggregateOutputType | null
  _max: MessageMaxAggregateOutputType | null
}

export type MessageMinAggregateOutputType = {
  id: string | null
  conversationId: string | null
  senderUserId: string | null
  senderAdminId: string | null
  content: string | null
  system: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MessageMaxAggregateOutputType = {
  id: string | null
  conversationId: string | null
  senderUserId: string | null
  senderAdminId: string | null
  content: string | null
  system: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MessageCountAggregateOutputType = {
  id: number
  conversationId: number
  senderUserId: number
  senderAdminId: number
  content: number
  attachments: number
  system: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type MessageMinAggregateInputType = {
  id?: true
  conversationId?: true
  senderUserId?: true
  senderAdminId?: true
  content?: true
  system?: true
  createdAt?: true
  updatedAt?: true
}

export type MessageMaxAggregateInputType = {
  id?: true
  conversationId?: true
  senderUserId?: true
  senderAdminId?: true
  content?: true
  system?: true
  createdAt?: true
  updatedAt?: true
}

export type MessageCountAggregateInputType = {
  id?: true
  conversationId?: true
  senderUserId?: true
  senderAdminId?: true
  content?: true
  attachments?: true
  system?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type MessageAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Message to aggregate.
   */
  where?: Prisma.MessageWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Messages to fetch.
   */
  orderBy?: Prisma.MessageOrderByWithRelationInput | Prisma.MessageOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MessageWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Messages from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Messages.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Messages
  **/
  _count?: true | MessageCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MessageMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MessageMaxAggregateInputType
}

export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
      [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMessage[P]>
    : Prisma.GetScalarType<T[P], AggregateMessage[P]>
}




export type MessageGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MessageWhereInput
  orderBy?: Prisma.MessageOrderByWithAggregationInput | Prisma.MessageOrderByWithAggregationInput[]
  by: Prisma.MessageScalarFieldEnum[] | Prisma.MessageScalarFieldEnum
  having?: Prisma.MessageScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MessageCountAggregateInputType | true
  _min?: MessageMinAggregateInputType
  _max?: MessageMaxAggregateInputType
}

export type MessageGroupByOutputType = {
  id: string
  conversationId: string
  senderUserId: string | null
  senderAdminId: string | null
  content: string | null
  attachments: string[]
  system: boolean
  createdAt: Date
  updatedAt: Date
  _count: MessageCountAggregateOutputType | null
  _min: MessageMinAggregateOutputType | null
  _max: MessageMaxAggregateOutputType | null
}

type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MessageGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MessageGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MessageGroupByOutputType[P]>
      }
    >
  >



export type MessageWhereInput = {
  AND?: Prisma.MessageWhereInput | Prisma.MessageWhereInput[]
  OR?: Prisma.MessageWhereInput[]
  NOT?: Prisma.MessageWhereInput | Prisma.MessageWhereInput[]
  id?: Prisma.UuidFilter<"Message"> | string
  conversationId?: Prisma.UuidFilter<"Message"> | string
  senderUserId?: Prisma.UuidNullableFilter<"Message"> | string | null
  senderAdminId?: Prisma.UuidNullableFilter<"Message"> | string | null
  content?: Prisma.StringNullableFilter<"Message"> | string | null
  attachments?: Prisma.StringNullableListFilter<"Message">
  system?: Prisma.BoolFilter<"Message"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Message"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Message"> | Date | string
  conversation?: Prisma.XOR<Prisma.ConversationScalarRelationFilter, Prisma.ConversationWhereInput>
  senderUser?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  senderAdmin?: Prisma.XOR<Prisma.AdminNullableScalarRelationFilter, Prisma.AdminWhereInput> | null
  readReceipts?: Prisma.MessageReadReceiptListRelationFilter
}

export type MessageOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  conversationId?: Prisma.SortOrder
  senderUserId?: Prisma.SortOrderInput | Prisma.SortOrder
  senderAdminId?: Prisma.SortOrderInput | Prisma.SortOrder
  content?: Prisma.SortOrderInput | Prisma.SortOrder
  attachments?: Prisma.SortOrder
  system?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  conversation?: Prisma.ConversationOrderByWithRelationInput
  senderUser?: Prisma.UserOrderByWithRelationInput
  senderAdmin?: Prisma.AdminOrderByWithRelationInput
  readReceipts?: Prisma.MessageReadReceiptOrderByRelationAggregateInput
}

export type MessageWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.MessageWhereInput | Prisma.MessageWhereInput[]
  OR?: Prisma.MessageWhereInput[]
  NOT?: Prisma.MessageWhereInput | Prisma.MessageWhereInput[]
  conversationId?: Prisma.UuidFilter<"Message"> | string
  senderUserId?: Prisma.UuidNullableFilter<"Message"> | string | null
  senderAdminId?: Prisma.UuidNullableFilter<"Message"> | string | null
  content?: Prisma.StringNullableFilter<"Message"> | string | null
  attachments?: Prisma.StringNullableListFilter<"Message">
  system?: Prisma.BoolFilter<"Message"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Message"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Message"> | Date | string
  conversation?: Prisma.XOR<Prisma.ConversationScalarRelationFilter, Prisma.ConversationWhereInput>
  senderUser?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  senderAdmin?: Prisma.XOR<Prisma.AdminNullableScalarRelationFilter, Prisma.AdminWhereInput> | null
  readReceipts?: Prisma.MessageReadReceiptListRelationFilter
}, "id">

export type MessageOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  conversationId?: Prisma.SortOrder
  senderUserId?: Prisma.SortOrderInput | Prisma.SortOrder
  senderAdminId?: Prisma.SortOrderInput | Prisma.SortOrder
  content?: Prisma.SortOrderInput | Prisma.SortOrder
  attachments?: Prisma.SortOrder
  system?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MessageCountOrderByAggregateInput
  _max?: Prisma.MessageMaxOrderByAggregateInput
  _min?: Prisma.MessageMinOrderByAggregateInput
}

export type MessageScalarWhereWithAggregatesInput = {
  AND?: Prisma.MessageScalarWhereWithAggregatesInput | Prisma.MessageScalarWhereWithAggregatesInput[]
  OR?: Prisma.MessageScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MessageScalarWhereWithAggregatesInput | Prisma.MessageScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"Message"> | string
  conversationId?: Prisma.UuidWithAggregatesFilter<"Message"> | string
  senderUserId?: Prisma.UuidNullableWithAggregatesFilter<"Message"> | string | null
  senderAdminId?: Prisma.UuidNullableWithAggregatesFilter<"Message"> | string | null
  content?: Prisma.StringNullableWithAggregatesFilter<"Message"> | string | null
  attachments?: Prisma.StringNullableListFilter<"Message">
  system?: Prisma.BoolWithAggregatesFilter<"Message"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Message"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Message"> | Date | string
}

export type MessageCreateInput = {
  id?: string
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  conversation: Prisma.ConversationCreateNestedOneWithoutMessagesInput
  senderUser?: Prisma.UserCreateNestedOneWithoutMessagesSentInput
  senderAdmin?: Prisma.AdminCreateNestedOneWithoutMessageInput
  readReceipts?: Prisma.MessageReadReceiptCreateNestedManyWithoutMessageInput
}

export type MessageUncheckedCreateInput = {
  id?: string
  conversationId: string
  senderUserId?: string | null
  senderAdminId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  readReceipts?: Prisma.MessageReadReceiptUncheckedCreateNestedManyWithoutMessageInput
}

export type MessageUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  conversation?: Prisma.ConversationUpdateOneRequiredWithoutMessagesNestedInput
  senderUser?: Prisma.UserUpdateOneWithoutMessagesSentNestedInput
  senderAdmin?: Prisma.AdminUpdateOneWithoutMessageNestedInput
  readReceipts?: Prisma.MessageReadReceiptUpdateManyWithoutMessageNestedInput
}

export type MessageUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  conversationId?: Prisma.StringFieldUpdateOperationsInput | string
  senderUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  senderAdminId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  readReceipts?: Prisma.MessageReadReceiptUncheckedUpdateManyWithoutMessageNestedInput
}

export type MessageCreateManyInput = {
  id?: string
  conversationId: string
  senderUserId?: string | null
  senderAdminId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MessageUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MessageUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  conversationId?: Prisma.StringFieldUpdateOperationsInput | string
  senderUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  senderAdminId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MessageListRelationFilter = {
  every?: Prisma.MessageWhereInput
  some?: Prisma.MessageWhereInput
  none?: Prisma.MessageWhereInput
}

export type MessageOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StringNullableListFilter<$PrismaModel = never> = {
  equals?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null
  has?: string | Prisma.StringFieldRefInput<$PrismaModel> | null
  hasEvery?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  hasSome?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type MessageCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  conversationId?: Prisma.SortOrder
  senderUserId?: Prisma.SortOrder
  senderAdminId?: Prisma.SortOrder
  content?: Prisma.SortOrder
  attachments?: Prisma.SortOrder
  system?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MessageMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  conversationId?: Prisma.SortOrder
  senderUserId?: Prisma.SortOrder
  senderAdminId?: Prisma.SortOrder
  content?: Prisma.SortOrder
  system?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MessageMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  conversationId?: Prisma.SortOrder
  senderUserId?: Prisma.SortOrder
  senderAdminId?: Prisma.SortOrder
  content?: Prisma.SortOrder
  system?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MessageScalarRelationFilter = {
  is?: Prisma.MessageWhereInput
  isNot?: Prisma.MessageWhereInput
}

export type MessageCreateNestedManyWithoutSenderUserInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutSenderUserInput, Prisma.MessageUncheckedCreateWithoutSenderUserInput> | Prisma.MessageCreateWithoutSenderUserInput[] | Prisma.MessageUncheckedCreateWithoutSenderUserInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutSenderUserInput | Prisma.MessageCreateOrConnectWithoutSenderUserInput[]
  createMany?: Prisma.MessageCreateManySenderUserInputEnvelope
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
}

export type MessageUncheckedCreateNestedManyWithoutSenderUserInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutSenderUserInput, Prisma.MessageUncheckedCreateWithoutSenderUserInput> | Prisma.MessageCreateWithoutSenderUserInput[] | Prisma.MessageUncheckedCreateWithoutSenderUserInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutSenderUserInput | Prisma.MessageCreateOrConnectWithoutSenderUserInput[]
  createMany?: Prisma.MessageCreateManySenderUserInputEnvelope
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
}

export type MessageUpdateManyWithoutSenderUserNestedInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutSenderUserInput, Prisma.MessageUncheckedCreateWithoutSenderUserInput> | Prisma.MessageCreateWithoutSenderUserInput[] | Prisma.MessageUncheckedCreateWithoutSenderUserInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutSenderUserInput | Prisma.MessageCreateOrConnectWithoutSenderUserInput[]
  upsert?: Prisma.MessageUpsertWithWhereUniqueWithoutSenderUserInput | Prisma.MessageUpsertWithWhereUniqueWithoutSenderUserInput[]
  createMany?: Prisma.MessageCreateManySenderUserInputEnvelope
  set?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  disconnect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  delete?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  update?: Prisma.MessageUpdateWithWhereUniqueWithoutSenderUserInput | Prisma.MessageUpdateWithWhereUniqueWithoutSenderUserInput[]
  updateMany?: Prisma.MessageUpdateManyWithWhereWithoutSenderUserInput | Prisma.MessageUpdateManyWithWhereWithoutSenderUserInput[]
  deleteMany?: Prisma.MessageScalarWhereInput | Prisma.MessageScalarWhereInput[]
}

export type MessageUncheckedUpdateManyWithoutSenderUserNestedInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutSenderUserInput, Prisma.MessageUncheckedCreateWithoutSenderUserInput> | Prisma.MessageCreateWithoutSenderUserInput[] | Prisma.MessageUncheckedCreateWithoutSenderUserInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutSenderUserInput | Prisma.MessageCreateOrConnectWithoutSenderUserInput[]
  upsert?: Prisma.MessageUpsertWithWhereUniqueWithoutSenderUserInput | Prisma.MessageUpsertWithWhereUniqueWithoutSenderUserInput[]
  createMany?: Prisma.MessageCreateManySenderUserInputEnvelope
  set?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  disconnect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  delete?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  update?: Prisma.MessageUpdateWithWhereUniqueWithoutSenderUserInput | Prisma.MessageUpdateWithWhereUniqueWithoutSenderUserInput[]
  updateMany?: Prisma.MessageUpdateManyWithWhereWithoutSenderUserInput | Prisma.MessageUpdateManyWithWhereWithoutSenderUserInput[]
  deleteMany?: Prisma.MessageScalarWhereInput | Prisma.MessageScalarWhereInput[]
}

export type MessageCreateNestedManyWithoutSenderAdminInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutSenderAdminInput, Prisma.MessageUncheckedCreateWithoutSenderAdminInput> | Prisma.MessageCreateWithoutSenderAdminInput[] | Prisma.MessageUncheckedCreateWithoutSenderAdminInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutSenderAdminInput | Prisma.MessageCreateOrConnectWithoutSenderAdminInput[]
  createMany?: Prisma.MessageCreateManySenderAdminInputEnvelope
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
}

export type MessageUncheckedCreateNestedManyWithoutSenderAdminInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutSenderAdminInput, Prisma.MessageUncheckedCreateWithoutSenderAdminInput> | Prisma.MessageCreateWithoutSenderAdminInput[] | Prisma.MessageUncheckedCreateWithoutSenderAdminInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutSenderAdminInput | Prisma.MessageCreateOrConnectWithoutSenderAdminInput[]
  createMany?: Prisma.MessageCreateManySenderAdminInputEnvelope
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
}

export type MessageUpdateManyWithoutSenderAdminNestedInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutSenderAdminInput, Prisma.MessageUncheckedCreateWithoutSenderAdminInput> | Prisma.MessageCreateWithoutSenderAdminInput[] | Prisma.MessageUncheckedCreateWithoutSenderAdminInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutSenderAdminInput | Prisma.MessageCreateOrConnectWithoutSenderAdminInput[]
  upsert?: Prisma.MessageUpsertWithWhereUniqueWithoutSenderAdminInput | Prisma.MessageUpsertWithWhereUniqueWithoutSenderAdminInput[]
  createMany?: Prisma.MessageCreateManySenderAdminInputEnvelope
  set?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  disconnect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  delete?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  update?: Prisma.MessageUpdateWithWhereUniqueWithoutSenderAdminInput | Prisma.MessageUpdateWithWhereUniqueWithoutSenderAdminInput[]
  updateMany?: Prisma.MessageUpdateManyWithWhereWithoutSenderAdminInput | Prisma.MessageUpdateManyWithWhereWithoutSenderAdminInput[]
  deleteMany?: Prisma.MessageScalarWhereInput | Prisma.MessageScalarWhereInput[]
}

export type MessageUncheckedUpdateManyWithoutSenderAdminNestedInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutSenderAdminInput, Prisma.MessageUncheckedCreateWithoutSenderAdminInput> | Prisma.MessageCreateWithoutSenderAdminInput[] | Prisma.MessageUncheckedCreateWithoutSenderAdminInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutSenderAdminInput | Prisma.MessageCreateOrConnectWithoutSenderAdminInput[]
  upsert?: Prisma.MessageUpsertWithWhereUniqueWithoutSenderAdminInput | Prisma.MessageUpsertWithWhereUniqueWithoutSenderAdminInput[]
  createMany?: Prisma.MessageCreateManySenderAdminInputEnvelope
  set?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  disconnect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  delete?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  update?: Prisma.MessageUpdateWithWhereUniqueWithoutSenderAdminInput | Prisma.MessageUpdateWithWhereUniqueWithoutSenderAdminInput[]
  updateMany?: Prisma.MessageUpdateManyWithWhereWithoutSenderAdminInput | Prisma.MessageUpdateManyWithWhereWithoutSenderAdminInput[]
  deleteMany?: Prisma.MessageScalarWhereInput | Prisma.MessageScalarWhereInput[]
}

export type MessageCreateNestedManyWithoutConversationInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutConversationInput, Prisma.MessageUncheckedCreateWithoutConversationInput> | Prisma.MessageCreateWithoutConversationInput[] | Prisma.MessageUncheckedCreateWithoutConversationInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutConversationInput | Prisma.MessageCreateOrConnectWithoutConversationInput[]
  createMany?: Prisma.MessageCreateManyConversationInputEnvelope
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
}

export type MessageUncheckedCreateNestedManyWithoutConversationInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutConversationInput, Prisma.MessageUncheckedCreateWithoutConversationInput> | Prisma.MessageCreateWithoutConversationInput[] | Prisma.MessageUncheckedCreateWithoutConversationInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutConversationInput | Prisma.MessageCreateOrConnectWithoutConversationInput[]
  createMany?: Prisma.MessageCreateManyConversationInputEnvelope
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
}

export type MessageUpdateManyWithoutConversationNestedInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutConversationInput, Prisma.MessageUncheckedCreateWithoutConversationInput> | Prisma.MessageCreateWithoutConversationInput[] | Prisma.MessageUncheckedCreateWithoutConversationInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutConversationInput | Prisma.MessageCreateOrConnectWithoutConversationInput[]
  upsert?: Prisma.MessageUpsertWithWhereUniqueWithoutConversationInput | Prisma.MessageUpsertWithWhereUniqueWithoutConversationInput[]
  createMany?: Prisma.MessageCreateManyConversationInputEnvelope
  set?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  disconnect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  delete?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  update?: Prisma.MessageUpdateWithWhereUniqueWithoutConversationInput | Prisma.MessageUpdateWithWhereUniqueWithoutConversationInput[]
  updateMany?: Prisma.MessageUpdateManyWithWhereWithoutConversationInput | Prisma.MessageUpdateManyWithWhereWithoutConversationInput[]
  deleteMany?: Prisma.MessageScalarWhereInput | Prisma.MessageScalarWhereInput[]
}

export type MessageUncheckedUpdateManyWithoutConversationNestedInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutConversationInput, Prisma.MessageUncheckedCreateWithoutConversationInput> | Prisma.MessageCreateWithoutConversationInput[] | Prisma.MessageUncheckedCreateWithoutConversationInput[]
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutConversationInput | Prisma.MessageCreateOrConnectWithoutConversationInput[]
  upsert?: Prisma.MessageUpsertWithWhereUniqueWithoutConversationInput | Prisma.MessageUpsertWithWhereUniqueWithoutConversationInput[]
  createMany?: Prisma.MessageCreateManyConversationInputEnvelope
  set?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  disconnect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  delete?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  connect?: Prisma.MessageWhereUniqueInput | Prisma.MessageWhereUniqueInput[]
  update?: Prisma.MessageUpdateWithWhereUniqueWithoutConversationInput | Prisma.MessageUpdateWithWhereUniqueWithoutConversationInput[]
  updateMany?: Prisma.MessageUpdateManyWithWhereWithoutConversationInput | Prisma.MessageUpdateManyWithWhereWithoutConversationInput[]
  deleteMany?: Prisma.MessageScalarWhereInput | Prisma.MessageScalarWhereInput[]
}

export type MessageCreateattachmentsInput = {
  set: string[]
}

export type MessageUpdateattachmentsInput = {
  set?: string[]
  push?: string | string[]
}

export type MessageCreateNestedOneWithoutReadReceiptsInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutReadReceiptsInput, Prisma.MessageUncheckedCreateWithoutReadReceiptsInput>
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutReadReceiptsInput
  connect?: Prisma.MessageWhereUniqueInput
}

export type MessageUpdateOneRequiredWithoutReadReceiptsNestedInput = {
  create?: Prisma.XOR<Prisma.MessageCreateWithoutReadReceiptsInput, Prisma.MessageUncheckedCreateWithoutReadReceiptsInput>
  connectOrCreate?: Prisma.MessageCreateOrConnectWithoutReadReceiptsInput
  upsert?: Prisma.MessageUpsertWithoutReadReceiptsInput
  connect?: Prisma.MessageWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MessageUpdateToOneWithWhereWithoutReadReceiptsInput, Prisma.MessageUpdateWithoutReadReceiptsInput>, Prisma.MessageUncheckedUpdateWithoutReadReceiptsInput>
}

export type MessageCreateWithoutSenderUserInput = {
  id?: string
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  conversation: Prisma.ConversationCreateNestedOneWithoutMessagesInput
  senderAdmin?: Prisma.AdminCreateNestedOneWithoutMessageInput
  readReceipts?: Prisma.MessageReadReceiptCreateNestedManyWithoutMessageInput
}

export type MessageUncheckedCreateWithoutSenderUserInput = {
  id?: string
  conversationId: string
  senderAdminId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  readReceipts?: Prisma.MessageReadReceiptUncheckedCreateNestedManyWithoutMessageInput
}

export type MessageCreateOrConnectWithoutSenderUserInput = {
  where: Prisma.MessageWhereUniqueInput
  create: Prisma.XOR<Prisma.MessageCreateWithoutSenderUserInput, Prisma.MessageUncheckedCreateWithoutSenderUserInput>
}

export type MessageCreateManySenderUserInputEnvelope = {
  data: Prisma.MessageCreateManySenderUserInput | Prisma.MessageCreateManySenderUserInput[]
  skipDuplicates?: boolean
}

export type MessageUpsertWithWhereUniqueWithoutSenderUserInput = {
  where: Prisma.MessageWhereUniqueInput
  update: Prisma.XOR<Prisma.MessageUpdateWithoutSenderUserInput, Prisma.MessageUncheckedUpdateWithoutSenderUserInput>
  create: Prisma.XOR<Prisma.MessageCreateWithoutSenderUserInput, Prisma.MessageUncheckedCreateWithoutSenderUserInput>
}

export type MessageUpdateWithWhereUniqueWithoutSenderUserInput = {
  where: Prisma.MessageWhereUniqueInput
  data: Prisma.XOR<Prisma.MessageUpdateWithoutSenderUserInput, Prisma.MessageUncheckedUpdateWithoutSenderUserInput>
}

export type MessageUpdateManyWithWhereWithoutSenderUserInput = {
  where: Prisma.MessageScalarWhereInput
  data: Prisma.XOR<Prisma.MessageUpdateManyMutationInput, Prisma.MessageUncheckedUpdateManyWithoutSenderUserInput>
}

export type MessageScalarWhereInput = {
  AND?: Prisma.MessageScalarWhereInput | Prisma.MessageScalarWhereInput[]
  OR?: Prisma.MessageScalarWhereInput[]
  NOT?: Prisma.MessageScalarWhereInput | Prisma.MessageScalarWhereInput[]
  id?: Prisma.UuidFilter<"Message"> | string
  conversationId?: Prisma.UuidFilter<"Message"> | string
  senderUserId?: Prisma.UuidNullableFilter<"Message"> | string | null
  senderAdminId?: Prisma.UuidNullableFilter<"Message"> | string | null
  content?: Prisma.StringNullableFilter<"Message"> | string | null
  attachments?: Prisma.StringNullableListFilter<"Message">
  system?: Prisma.BoolFilter<"Message"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Message"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Message"> | Date | string
}

export type MessageCreateWithoutSenderAdminInput = {
  id?: string
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  conversation: Prisma.ConversationCreateNestedOneWithoutMessagesInput
  senderUser?: Prisma.UserCreateNestedOneWithoutMessagesSentInput
  readReceipts?: Prisma.MessageReadReceiptCreateNestedManyWithoutMessageInput
}

export type MessageUncheckedCreateWithoutSenderAdminInput = {
  id?: string
  conversationId: string
  senderUserId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  readReceipts?: Prisma.MessageReadReceiptUncheckedCreateNestedManyWithoutMessageInput
}

export type MessageCreateOrConnectWithoutSenderAdminInput = {
  where: Prisma.MessageWhereUniqueInput
  create: Prisma.XOR<Prisma.MessageCreateWithoutSenderAdminInput, Prisma.MessageUncheckedCreateWithoutSenderAdminInput>
}

export type MessageCreateManySenderAdminInputEnvelope = {
  data: Prisma.MessageCreateManySenderAdminInput | Prisma.MessageCreateManySenderAdminInput[]
  skipDuplicates?: boolean
}

export type MessageUpsertWithWhereUniqueWithoutSenderAdminInput = {
  where: Prisma.MessageWhereUniqueInput
  update: Prisma.XOR<Prisma.MessageUpdateWithoutSenderAdminInput, Prisma.MessageUncheckedUpdateWithoutSenderAdminInput>
  create: Prisma.XOR<Prisma.MessageCreateWithoutSenderAdminInput, Prisma.MessageUncheckedCreateWithoutSenderAdminInput>
}

export type MessageUpdateWithWhereUniqueWithoutSenderAdminInput = {
  where: Prisma.MessageWhereUniqueInput
  data: Prisma.XOR<Prisma.MessageUpdateWithoutSenderAdminInput, Prisma.MessageUncheckedUpdateWithoutSenderAdminInput>
}

export type MessageUpdateManyWithWhereWithoutSenderAdminInput = {
  where: Prisma.MessageScalarWhereInput
  data: Prisma.XOR<Prisma.MessageUpdateManyMutationInput, Prisma.MessageUncheckedUpdateManyWithoutSenderAdminInput>
}

export type MessageCreateWithoutConversationInput = {
  id?: string
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  senderUser?: Prisma.UserCreateNestedOneWithoutMessagesSentInput
  senderAdmin?: Prisma.AdminCreateNestedOneWithoutMessageInput
  readReceipts?: Prisma.MessageReadReceiptCreateNestedManyWithoutMessageInput
}

export type MessageUncheckedCreateWithoutConversationInput = {
  id?: string
  senderUserId?: string | null
  senderAdminId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  readReceipts?: Prisma.MessageReadReceiptUncheckedCreateNestedManyWithoutMessageInput
}

export type MessageCreateOrConnectWithoutConversationInput = {
  where: Prisma.MessageWhereUniqueInput
  create: Prisma.XOR<Prisma.MessageCreateWithoutConversationInput, Prisma.MessageUncheckedCreateWithoutConversationInput>
}

export type MessageCreateManyConversationInputEnvelope = {
  data: Prisma.MessageCreateManyConversationInput | Prisma.MessageCreateManyConversationInput[]
  skipDuplicates?: boolean
}

export type MessageUpsertWithWhereUniqueWithoutConversationInput = {
  where: Prisma.MessageWhereUniqueInput
  update: Prisma.XOR<Prisma.MessageUpdateWithoutConversationInput, Prisma.MessageUncheckedUpdateWithoutConversationInput>
  create: Prisma.XOR<Prisma.MessageCreateWithoutConversationInput, Prisma.MessageUncheckedCreateWithoutConversationInput>
}

export type MessageUpdateWithWhereUniqueWithoutConversationInput = {
  where: Prisma.MessageWhereUniqueInput
  data: Prisma.XOR<Prisma.MessageUpdateWithoutConversationInput, Prisma.MessageUncheckedUpdateWithoutConversationInput>
}

export type MessageUpdateManyWithWhereWithoutConversationInput = {
  where: Prisma.MessageScalarWhereInput
  data: Prisma.XOR<Prisma.MessageUpdateManyMutationInput, Prisma.MessageUncheckedUpdateManyWithoutConversationInput>
}

export type MessageCreateWithoutReadReceiptsInput = {
  id?: string
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  conversation: Prisma.ConversationCreateNestedOneWithoutMessagesInput
  senderUser?: Prisma.UserCreateNestedOneWithoutMessagesSentInput
  senderAdmin?: Prisma.AdminCreateNestedOneWithoutMessageInput
}

export type MessageUncheckedCreateWithoutReadReceiptsInput = {
  id?: string
  conversationId: string
  senderUserId?: string | null
  senderAdminId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MessageCreateOrConnectWithoutReadReceiptsInput = {
  where: Prisma.MessageWhereUniqueInput
  create: Prisma.XOR<Prisma.MessageCreateWithoutReadReceiptsInput, Prisma.MessageUncheckedCreateWithoutReadReceiptsInput>
}

export type MessageUpsertWithoutReadReceiptsInput = {
  update: Prisma.XOR<Prisma.MessageUpdateWithoutReadReceiptsInput, Prisma.MessageUncheckedUpdateWithoutReadReceiptsInput>
  create: Prisma.XOR<Prisma.MessageCreateWithoutReadReceiptsInput, Prisma.MessageUncheckedCreateWithoutReadReceiptsInput>
  where?: Prisma.MessageWhereInput
}

export type MessageUpdateToOneWithWhereWithoutReadReceiptsInput = {
  where?: Prisma.MessageWhereInput
  data: Prisma.XOR<Prisma.MessageUpdateWithoutReadReceiptsInput, Prisma.MessageUncheckedUpdateWithoutReadReceiptsInput>
}

export type MessageUpdateWithoutReadReceiptsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  conversation?: Prisma.ConversationUpdateOneRequiredWithoutMessagesNestedInput
  senderUser?: Prisma.UserUpdateOneWithoutMessagesSentNestedInput
  senderAdmin?: Prisma.AdminUpdateOneWithoutMessageNestedInput
}

export type MessageUncheckedUpdateWithoutReadReceiptsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  conversationId?: Prisma.StringFieldUpdateOperationsInput | string
  senderUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  senderAdminId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MessageCreateManySenderUserInput = {
  id?: string
  conversationId: string
  senderAdminId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MessageUpdateWithoutSenderUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  conversation?: Prisma.ConversationUpdateOneRequiredWithoutMessagesNestedInput
  senderAdmin?: Prisma.AdminUpdateOneWithoutMessageNestedInput
  readReceipts?: Prisma.MessageReadReceiptUpdateManyWithoutMessageNestedInput
}

export type MessageUncheckedUpdateWithoutSenderUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  conversationId?: Prisma.StringFieldUpdateOperationsInput | string
  senderAdminId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  readReceipts?: Prisma.MessageReadReceiptUncheckedUpdateManyWithoutMessageNestedInput
}

export type MessageUncheckedUpdateManyWithoutSenderUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  conversationId?: Prisma.StringFieldUpdateOperationsInput | string
  senderAdminId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MessageCreateManySenderAdminInput = {
  id?: string
  conversationId: string
  senderUserId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MessageUpdateWithoutSenderAdminInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  conversation?: Prisma.ConversationUpdateOneRequiredWithoutMessagesNestedInput
  senderUser?: Prisma.UserUpdateOneWithoutMessagesSentNestedInput
  readReceipts?: Prisma.MessageReadReceiptUpdateManyWithoutMessageNestedInput
}

export type MessageUncheckedUpdateWithoutSenderAdminInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  conversationId?: Prisma.StringFieldUpdateOperationsInput | string
  senderUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  readReceipts?: Prisma.MessageReadReceiptUncheckedUpdateManyWithoutMessageNestedInput
}

export type MessageUncheckedUpdateManyWithoutSenderAdminInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  conversationId?: Prisma.StringFieldUpdateOperationsInput | string
  senderUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MessageCreateManyConversationInput = {
  id?: string
  senderUserId?: string | null
  senderAdminId?: string | null
  content?: string | null
  attachments?: Prisma.MessageCreateattachmentsInput | string[]
  system?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MessageUpdateWithoutConversationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  senderUser?: Prisma.UserUpdateOneWithoutMessagesSentNestedInput
  senderAdmin?: Prisma.AdminUpdateOneWithoutMessageNestedInput
  readReceipts?: Prisma.MessageReadReceiptUpdateManyWithoutMessageNestedInput
}

export type MessageUncheckedUpdateWithoutConversationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  senderUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  senderAdminId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  readReceipts?: Prisma.MessageReadReceiptUncheckedUpdateManyWithoutMessageNestedInput
}

export type MessageUncheckedUpdateManyWithoutConversationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  senderUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  senderAdminId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  attachments?: Prisma.MessageUpdateattachmentsInput | string[]
  system?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type MessageCountOutputType
 */

export type MessageCountOutputType = {
  readReceipts: number
}

export type MessageCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  readReceipts?: boolean | MessageCountOutputTypeCountReadReceiptsArgs
}

/**
 * MessageCountOutputType without action
 */
export type MessageCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MessageCountOutputType
   */
  select?: Prisma.MessageCountOutputTypeSelect<ExtArgs> | null
}

/**
 * MessageCountOutputType without action
 */
export type MessageCountOutputTypeCountReadReceiptsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MessageReadReceiptWhereInput
}


export type MessageSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  conversationId?: boolean
  senderUserId?: boolean
  senderAdminId?: boolean
  content?: boolean
  attachments?: boolean
  system?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  conversation?: boolean | Prisma.ConversationDefaultArgs<ExtArgs>
  senderUser?: boolean | Prisma.Message$senderUserArgs<ExtArgs>
  senderAdmin?: boolean | Prisma.Message$senderAdminArgs<ExtArgs>
  readReceipts?: boolean | Prisma.Message$readReceiptsArgs<ExtArgs>
  _count?: boolean | Prisma.MessageCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["message"]>

export type MessageSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  conversationId?: boolean
  senderUserId?: boolean
  senderAdminId?: boolean
  content?: boolean
  attachments?: boolean
  system?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  conversation?: boolean | Prisma.ConversationDefaultArgs<ExtArgs>
  senderUser?: boolean | Prisma.Message$senderUserArgs<ExtArgs>
  senderAdmin?: boolean | Prisma.Message$senderAdminArgs<ExtArgs>
}, ExtArgs["result"]["message"]>

export type MessageSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  conversationId?: boolean
  senderUserId?: boolean
  senderAdminId?: boolean
  content?: boolean
  attachments?: boolean
  system?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  conversation?: boolean | Prisma.ConversationDefaultArgs<ExtArgs>
  senderUser?: boolean | Prisma.Message$senderUserArgs<ExtArgs>
  senderAdmin?: boolean | Prisma.Message$senderAdminArgs<ExtArgs>
}, ExtArgs["result"]["message"]>

export type MessageSelectScalar = {
  id?: boolean
  conversationId?: boolean
  senderUserId?: boolean
  senderAdminId?: boolean
  content?: boolean
  attachments?: boolean
  system?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type MessageOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "conversationId" | "senderUserId" | "senderAdminId" | "content" | "attachments" | "system" | "createdAt" | "updatedAt", ExtArgs["result"]["message"]>
export type MessageInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  conversation?: boolean | Prisma.ConversationDefaultArgs<ExtArgs>
  senderUser?: boolean | Prisma.Message$senderUserArgs<ExtArgs>
  senderAdmin?: boolean | Prisma.Message$senderAdminArgs<ExtArgs>
  readReceipts?: boolean | Prisma.Message$readReceiptsArgs<ExtArgs>
  _count?: boolean | Prisma.MessageCountOutputTypeDefaultArgs<ExtArgs>
}
export type MessageIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  conversation?: boolean | Prisma.ConversationDefaultArgs<ExtArgs>
  senderUser?: boolean | Prisma.Message$senderUserArgs<ExtArgs>
  senderAdmin?: boolean | Prisma.Message$senderAdminArgs<ExtArgs>
}
export type MessageIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  conversation?: boolean | Prisma.ConversationDefaultArgs<ExtArgs>
  senderUser?: boolean | Prisma.Message$senderUserArgs<ExtArgs>
  senderAdmin?: boolean | Prisma.Message$senderAdminArgs<ExtArgs>
}

export type $MessagePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Message"
  objects: {
    conversation: Prisma.$ConversationPayload<ExtArgs>
    senderUser: Prisma.$UserPayload<ExtArgs> | null
    senderAdmin: Prisma.$AdminPayload<ExtArgs> | null
    readReceipts: Prisma.$MessageReadReceiptPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    conversationId: string
    senderUserId: string | null
    senderAdminId: string | null
    content: string | null
    attachments: string[]
    system: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["message"]>
  composites: {}
}

export type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MessagePayload, S>

export type MessageCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MessageCountAggregateInputType | true
  }

export interface MessageDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
  /**
   * Find zero or one Message that matches the filter.
   * @param {MessageFindUniqueArgs} args - Arguments to find a Message
   * @example
   * // Get one Message
   * const message = await prisma.message.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MessageFindUniqueArgs>(args: Prisma.SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MessageClient<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Message that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
   * @example
   * // Get one Message
   * const message = await prisma.message.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MessageClient<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Message that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MessageFindFirstArgs} args - Arguments to find a Message
   * @example
   * // Get one Message
   * const message = await prisma.message.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MessageFindFirstArgs>(args?: Prisma.SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma.Prisma__MessageClient<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Message that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
   * @example
   * // Get one Message
   * const message = await prisma.message.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MessageClient<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Messages that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Messages
   * const messages = await prisma.message.findMany()
   * 
   * // Get first 10 Messages
   * const messages = await prisma.message.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MessageFindManyArgs>(args?: Prisma.SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Message.
   * @param {MessageCreateArgs} args - Arguments to create a Message.
   * @example
   * // Create one Message
   * const Message = await prisma.message.create({
   *   data: {
   *     // ... data to create a Message
   *   }
   * })
   * 
   */
  create<T extends MessageCreateArgs>(args: Prisma.SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma.Prisma__MessageClient<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Messages.
   * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
   * @example
   * // Create many Messages
   * const message = await prisma.message.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MessageCreateManyArgs>(args?: Prisma.SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Messages and returns the data saved in the database.
   * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
   * @example
   * // Create many Messages
   * const message = await prisma.message.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Messages and only return the `id`
   * const messageWithIdOnly = await prisma.message.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Message.
   * @param {MessageDeleteArgs} args - Arguments to delete one Message.
   * @example
   * // Delete one Message
   * const Message = await prisma.message.delete({
   *   where: {
   *     // ... filter to delete one Message
   *   }
   * })
   * 
   */
  delete<T extends MessageDeleteArgs>(args: Prisma.SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma.Prisma__MessageClient<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Message.
   * @param {MessageUpdateArgs} args - Arguments to update one Message.
   * @example
   * // Update one Message
   * const message = await prisma.message.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MessageUpdateArgs>(args: Prisma.SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma.Prisma__MessageClient<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Messages.
   * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
   * @example
   * // Delete a few Messages
   * const { count } = await prisma.message.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MessageDeleteManyArgs>(args?: Prisma.SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Messages.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Messages
   * const message = await prisma.message.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MessageUpdateManyArgs>(args: Prisma.SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Messages and returns the data updated in the database.
   * @param {MessageUpdateManyAndReturnArgs} args - Arguments to update many Messages.
   * @example
   * // Update many Messages
   * const message = await prisma.message.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Messages and only return the `id`
   * const messageWithIdOnly = await prisma.message.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MessageUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MessageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Message.
   * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
   * @example
   * // Update or create a Message
   * const message = await prisma.message.upsert({
   *   create: {
   *     // ... data to create a Message
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Message we want to update
   *   }
   * })
   */
  upsert<T extends MessageUpsertArgs>(args: Prisma.SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma.Prisma__MessageClient<runtime.Types.Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Messages.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MessageCountArgs} args - Arguments to filter Messages to count.
   * @example
   * // Count the number of Messages
   * const count = await prisma.message.count({
   *   where: {
   *     // ... the filter for the Messages we want to count
   *   }
   * })
  **/
  count<T extends MessageCountArgs>(
    args?: Prisma.Subset<T, MessageCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MessageCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Message.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MessageAggregateArgs>(args: Prisma.Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

  /**
   * Group by Message.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MessageGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MessageGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MessageGroupByArgs['orderBy'] }
      : { orderBy?: MessageGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Message model
 */
readonly fields: MessageFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Message.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MessageClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  conversation<T extends Prisma.ConversationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ConversationDefaultArgs<ExtArgs>>): Prisma.Prisma__ConversationClient<runtime.Types.Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  senderUser<T extends Prisma.Message$senderUserArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Message$senderUserArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  senderAdmin<T extends Prisma.Message$senderAdminArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Message$senderAdminArgs<ExtArgs>>): Prisma.Prisma__AdminClient<runtime.Types.Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  readReceipts<T extends Prisma.Message$readReceiptsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Message$readReceiptsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MessageReadReceiptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Message model
 */
export interface MessageFieldRefs {
  readonly id: Prisma.FieldRef<"Message", 'String'>
  readonly conversationId: Prisma.FieldRef<"Message", 'String'>
  readonly senderUserId: Prisma.FieldRef<"Message", 'String'>
  readonly senderAdminId: Prisma.FieldRef<"Message", 'String'>
  readonly content: Prisma.FieldRef<"Message", 'String'>
  readonly attachments: Prisma.FieldRef<"Message", 'String[]'>
  readonly system: Prisma.FieldRef<"Message", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Message", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Message", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Message findUnique
 */
export type MessageFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * Filter, which Message to fetch.
   */
  where: Prisma.MessageWhereUniqueInput
}

/**
 * Message findUniqueOrThrow
 */
export type MessageFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * Filter, which Message to fetch.
   */
  where: Prisma.MessageWhereUniqueInput
}

/**
 * Message findFirst
 */
export type MessageFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * Filter, which Message to fetch.
   */
  where?: Prisma.MessageWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Messages to fetch.
   */
  orderBy?: Prisma.MessageOrderByWithRelationInput | Prisma.MessageOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Messages.
   */
  cursor?: Prisma.MessageWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Messages from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Messages.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Messages.
   */
  distinct?: Prisma.MessageScalarFieldEnum | Prisma.MessageScalarFieldEnum[]
}

/**
 * Message findFirstOrThrow
 */
export type MessageFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * Filter, which Message to fetch.
   */
  where?: Prisma.MessageWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Messages to fetch.
   */
  orderBy?: Prisma.MessageOrderByWithRelationInput | Prisma.MessageOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Messages.
   */
  cursor?: Prisma.MessageWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Messages from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Messages.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Messages.
   */
  distinct?: Prisma.MessageScalarFieldEnum | Prisma.MessageScalarFieldEnum[]
}

/**
 * Message findMany
 */
export type MessageFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * Filter, which Messages to fetch.
   */
  where?: Prisma.MessageWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Messages to fetch.
   */
  orderBy?: Prisma.MessageOrderByWithRelationInput | Prisma.MessageOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Messages.
   */
  cursor?: Prisma.MessageWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Messages from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Messages.
   */
  skip?: number
  distinct?: Prisma.MessageScalarFieldEnum | Prisma.MessageScalarFieldEnum[]
}

/**
 * Message create
 */
export type MessageCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * The data needed to create a Message.
   */
  data: Prisma.XOR<Prisma.MessageCreateInput, Prisma.MessageUncheckedCreateInput>
}

/**
 * Message createMany
 */
export type MessageCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Messages.
   */
  data: Prisma.MessageCreateManyInput | Prisma.MessageCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Message createManyAndReturn
 */
export type MessageCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * The data used to create many Messages.
   */
  data: Prisma.MessageCreateManyInput | Prisma.MessageCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Message update
 */
export type MessageUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * The data needed to update a Message.
   */
  data: Prisma.XOR<Prisma.MessageUpdateInput, Prisma.MessageUncheckedUpdateInput>
  /**
   * Choose, which Message to update.
   */
  where: Prisma.MessageWhereUniqueInput
}

/**
 * Message updateMany
 */
export type MessageUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Messages.
   */
  data: Prisma.XOR<Prisma.MessageUpdateManyMutationInput, Prisma.MessageUncheckedUpdateManyInput>
  /**
   * Filter which Messages to update
   */
  where?: Prisma.MessageWhereInput
  /**
   * Limit how many Messages to update.
   */
  limit?: number
}

/**
 * Message updateManyAndReturn
 */
export type MessageUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * The data used to update Messages.
   */
  data: Prisma.XOR<Prisma.MessageUpdateManyMutationInput, Prisma.MessageUncheckedUpdateManyInput>
  /**
   * Filter which Messages to update
   */
  where?: Prisma.MessageWhereInput
  /**
   * Limit how many Messages to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Message upsert
 */
export type MessageUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * The filter to search for the Message to update in case it exists.
   */
  where: Prisma.MessageWhereUniqueInput
  /**
   * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
   */
  create: Prisma.XOR<Prisma.MessageCreateInput, Prisma.MessageUncheckedCreateInput>
  /**
   * In case the Message was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MessageUpdateInput, Prisma.MessageUncheckedUpdateInput>
}

/**
 * Message delete
 */
export type MessageDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
  /**
   * Filter which Message to delete.
   */
  where: Prisma.MessageWhereUniqueInput
}

/**
 * Message deleteMany
 */
export type MessageDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Messages to delete
   */
  where?: Prisma.MessageWhereInput
  /**
   * Limit how many Messages to delete.
   */
  limit?: number
}

/**
 * Message.senderUser
 */
export type Message$senderUserArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * Message.senderAdmin
 */
export type Message$senderAdminArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Admin
   */
  select?: Prisma.AdminSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Admin
   */
  omit?: Prisma.AdminOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AdminInclude<ExtArgs> | null
  where?: Prisma.AdminWhereInput
}

/**
 * Message.readReceipts
 */
export type Message$readReceiptsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MessageReadReceipt
   */
  select?: Prisma.MessageReadReceiptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MessageReadReceipt
   */
  omit?: Prisma.MessageReadReceiptOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageReadReceiptInclude<ExtArgs> | null
  where?: Prisma.MessageReadReceiptWhereInput
  orderBy?: Prisma.MessageReadReceiptOrderByWithRelationInput | Prisma.MessageReadReceiptOrderByWithRelationInput[]
  cursor?: Prisma.MessageReadReceiptWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MessageReadReceiptScalarFieldEnum | Prisma.MessageReadReceiptScalarFieldEnum[]
}

/**
 * Message without action
 */
export type MessageDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Message
   */
  select?: Prisma.MessageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Message
   */
  omit?: Prisma.MessageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MessageInclude<ExtArgs> | null
}
