
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Institute` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Institute
 * 
 */
export type InstituteModel = runtime.Types.Result.DefaultSelection<Prisma.$InstitutePayload>

export type AggregateInstitute = {
  _count: InstituteCountAggregateOutputType | null
  _min: InstituteMinAggregateOutputType | null
  _max: InstituteMaxAggregateOutputType | null
}

export type InstituteMinAggregateOutputType = {
  id: string | null
  name: string | null
  logo: string | null
  timezone: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type InstituteMaxAggregateOutputType = {
  id: string | null
  name: string | null
  logo: string | null
  timezone: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type InstituteCountAggregateOutputType = {
  id: number
  name: number
  logo: number
  timezone: number
  metadata: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type InstituteMinAggregateInputType = {
  id?: true
  name?: true
  logo?: true
  timezone?: true
  createdAt?: true
  updatedAt?: true
}

export type InstituteMaxAggregateInputType = {
  id?: true
  name?: true
  logo?: true
  timezone?: true
  createdAt?: true
  updatedAt?: true
}

export type InstituteCountAggregateInputType = {
  id?: true
  name?: true
  logo?: true
  timezone?: true
  metadata?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type InstituteAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Institute to aggregate.
   */
  where?: Prisma.InstituteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Institutes to fetch.
   */
  orderBy?: Prisma.InstituteOrderByWithRelationInput | Prisma.InstituteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.InstituteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Institutes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Institutes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Institutes
  **/
  _count?: true | InstituteCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: InstituteMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: InstituteMaxAggregateInputType
}

export type GetInstituteAggregateType<T extends InstituteAggregateArgs> = {
      [P in keyof T & keyof AggregateInstitute]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInstitute[P]>
    : Prisma.GetScalarType<T[P], AggregateInstitute[P]>
}




export type InstituteGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InstituteWhereInput
  orderBy?: Prisma.InstituteOrderByWithAggregationInput | Prisma.InstituteOrderByWithAggregationInput[]
  by: Prisma.InstituteScalarFieldEnum[] | Prisma.InstituteScalarFieldEnum
  having?: Prisma.InstituteScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: InstituteCountAggregateInputType | true
  _min?: InstituteMinAggregateInputType
  _max?: InstituteMaxAggregateInputType
}

export type InstituteGroupByOutputType = {
  id: string
  name: string
  logo: string | null
  timezone: string | null
  metadata: runtime.JsonValue | null
  createdAt: Date
  updatedAt: Date
  _count: InstituteCountAggregateOutputType | null
  _min: InstituteMinAggregateOutputType | null
  _max: InstituteMaxAggregateOutputType | null
}

type GetInstituteGroupByPayload<T extends InstituteGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<InstituteGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof InstituteGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], InstituteGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], InstituteGroupByOutputType[P]>
      }
    >
  >



export type InstituteWhereInput = {
  AND?: Prisma.InstituteWhereInput | Prisma.InstituteWhereInput[]
  OR?: Prisma.InstituteWhereInput[]
  NOT?: Prisma.InstituteWhereInput | Prisma.InstituteWhereInput[]
  id?: Prisma.UuidFilter<"Institute"> | string
  name?: Prisma.StringFilter<"Institute"> | string
  logo?: Prisma.StringNullableFilter<"Institute"> | string | null
  timezone?: Prisma.StringNullableFilter<"Institute"> | string | null
  metadata?: Prisma.JsonNullableFilter<"Institute">
  createdAt?: Prisma.DateTimeFilter<"Institute"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Institute"> | Date | string
  posts?: Prisma.PostListRelationFilter
  comments?: Prisma.CommentListRelationFilter
  departments?: Prisma.DepartmentListRelationFilter
  programs?: Prisma.ProgramListRelationFilter
  courses?: Prisma.CourseListRelationFilter
  cohorts?: Prisma.CohortListRelationFilter
  assets?: Prisma.AssetListRelationFilter
  settings?: Prisma.XOR<Prisma.SettingNullableScalarRelationFilter, Prisma.SettingWhereInput> | null
  Fee?: Prisma.FeeListRelationFilter
  Conversation?: Prisma.ConversationListRelationFilter
  Notification?: Prisma.NotificationListRelationFilter
  Integration?: Prisma.IntegrationListRelationFilter
}

export type InstituteOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logo?: Prisma.SortOrderInput | Prisma.SortOrder
  timezone?: Prisma.SortOrderInput | Prisma.SortOrder
  metadata?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  posts?: Prisma.PostOrderByRelationAggregateInput
  comments?: Prisma.CommentOrderByRelationAggregateInput
  departments?: Prisma.DepartmentOrderByRelationAggregateInput
  programs?: Prisma.ProgramOrderByRelationAggregateInput
  courses?: Prisma.CourseOrderByRelationAggregateInput
  cohorts?: Prisma.CohortOrderByRelationAggregateInput
  assets?: Prisma.AssetOrderByRelationAggregateInput
  settings?: Prisma.SettingOrderByWithRelationInput
  Fee?: Prisma.FeeOrderByRelationAggregateInput
  Conversation?: Prisma.ConversationOrderByRelationAggregateInput
  Notification?: Prisma.NotificationOrderByRelationAggregateInput
  Integration?: Prisma.IntegrationOrderByRelationAggregateInput
}

export type InstituteWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.InstituteWhereInput | Prisma.InstituteWhereInput[]
  OR?: Prisma.InstituteWhereInput[]
  NOT?: Prisma.InstituteWhereInput | Prisma.InstituteWhereInput[]
  name?: Prisma.StringFilter<"Institute"> | string
  logo?: Prisma.StringNullableFilter<"Institute"> | string | null
  timezone?: Prisma.StringNullableFilter<"Institute"> | string | null
  metadata?: Prisma.JsonNullableFilter<"Institute">
  createdAt?: Prisma.DateTimeFilter<"Institute"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Institute"> | Date | string
  posts?: Prisma.PostListRelationFilter
  comments?: Prisma.CommentListRelationFilter
  departments?: Prisma.DepartmentListRelationFilter
  programs?: Prisma.ProgramListRelationFilter
  courses?: Prisma.CourseListRelationFilter
  cohorts?: Prisma.CohortListRelationFilter
  assets?: Prisma.AssetListRelationFilter
  settings?: Prisma.XOR<Prisma.SettingNullableScalarRelationFilter, Prisma.SettingWhereInput> | null
  Fee?: Prisma.FeeListRelationFilter
  Conversation?: Prisma.ConversationListRelationFilter
  Notification?: Prisma.NotificationListRelationFilter
  Integration?: Prisma.IntegrationListRelationFilter
}, "id">

export type InstituteOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logo?: Prisma.SortOrderInput | Prisma.SortOrder
  timezone?: Prisma.SortOrderInput | Prisma.SortOrder
  metadata?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.InstituteCountOrderByAggregateInput
  _max?: Prisma.InstituteMaxOrderByAggregateInput
  _min?: Prisma.InstituteMinOrderByAggregateInput
}

export type InstituteScalarWhereWithAggregatesInput = {
  AND?: Prisma.InstituteScalarWhereWithAggregatesInput | Prisma.InstituteScalarWhereWithAggregatesInput[]
  OR?: Prisma.InstituteScalarWhereWithAggregatesInput[]
  NOT?: Prisma.InstituteScalarWhereWithAggregatesInput | Prisma.InstituteScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"Institute"> | string
  name?: Prisma.StringWithAggregatesFilter<"Institute"> | string
  logo?: Prisma.StringNullableWithAggregatesFilter<"Institute"> | string | null
  timezone?: Prisma.StringNullableWithAggregatesFilter<"Institute"> | string | null
  metadata?: Prisma.JsonNullableWithAggregatesFilter<"Institute">
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Institute"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Institute"> | Date | string
}

export type InstituteCreateInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateManyInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InstituteUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InstituteUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InstituteCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logo?: Prisma.SortOrder
  timezone?: Prisma.SortOrder
  metadata?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InstituteMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logo?: Prisma.SortOrder
  timezone?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InstituteMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logo?: Prisma.SortOrder
  timezone?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InstituteScalarRelationFilter = {
  is?: Prisma.InstituteWhereInput
  isNot?: Prisma.InstituteWhereInput
}

export type InstituteNullableScalarRelationFilter = {
  is?: Prisma.InstituteWhereInput | null
  isNot?: Prisma.InstituteWhereInput | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type InstituteCreateNestedOneWithoutSettingsInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutSettingsInput, Prisma.InstituteUncheckedCreateWithoutSettingsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutSettingsInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneRequiredWithoutSettingsNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutSettingsInput, Prisma.InstituteUncheckedCreateWithoutSettingsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutSettingsInput
  upsert?: Prisma.InstituteUpsertWithoutSettingsInput
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutSettingsInput, Prisma.InstituteUpdateWithoutSettingsInput>, Prisma.InstituteUncheckedUpdateWithoutSettingsInput>
}

export type InstituteCreateNestedOneWithoutIntegrationInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutIntegrationInput, Prisma.InstituteUncheckedCreateWithoutIntegrationInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutIntegrationInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneRequiredWithoutIntegrationNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutIntegrationInput, Prisma.InstituteUncheckedCreateWithoutIntegrationInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutIntegrationInput
  upsert?: Prisma.InstituteUpsertWithoutIntegrationInput
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutIntegrationInput, Prisma.InstituteUpdateWithoutIntegrationInput>, Prisma.InstituteUncheckedUpdateWithoutIntegrationInput>
}

export type InstituteCreateNestedOneWithoutConversationInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutConversationInput, Prisma.InstituteUncheckedCreateWithoutConversationInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutConversationInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneWithoutConversationNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutConversationInput, Prisma.InstituteUncheckedCreateWithoutConversationInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutConversationInput
  upsert?: Prisma.InstituteUpsertWithoutConversationInput
  disconnect?: Prisma.InstituteWhereInput | boolean
  delete?: Prisma.InstituteWhereInput | boolean
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutConversationInput, Prisma.InstituteUpdateWithoutConversationInput>, Prisma.InstituteUncheckedUpdateWithoutConversationInput>
}

export type InstituteCreateNestedOneWithoutNotificationInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutNotificationInput, Prisma.InstituteUncheckedCreateWithoutNotificationInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutNotificationInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneWithoutNotificationNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutNotificationInput, Prisma.InstituteUncheckedCreateWithoutNotificationInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutNotificationInput
  upsert?: Prisma.InstituteUpsertWithoutNotificationInput
  disconnect?: Prisma.InstituteWhereInput | boolean
  delete?: Prisma.InstituteWhereInput | boolean
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutNotificationInput, Prisma.InstituteUpdateWithoutNotificationInput>, Prisma.InstituteUncheckedUpdateWithoutNotificationInput>
}

export type InstituteCreateNestedOneWithoutPostsInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutPostsInput, Prisma.InstituteUncheckedCreateWithoutPostsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutPostsInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneWithoutPostsNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutPostsInput, Prisma.InstituteUncheckedCreateWithoutPostsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutPostsInput
  upsert?: Prisma.InstituteUpsertWithoutPostsInput
  disconnect?: Prisma.InstituteWhereInput | boolean
  delete?: Prisma.InstituteWhereInput | boolean
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutPostsInput, Prisma.InstituteUpdateWithoutPostsInput>, Prisma.InstituteUncheckedUpdateWithoutPostsInput>
}

export type InstituteCreateNestedOneWithoutCommentsInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutCommentsInput, Prisma.InstituteUncheckedCreateWithoutCommentsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutCommentsInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneWithoutCommentsNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutCommentsInput, Prisma.InstituteUncheckedCreateWithoutCommentsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutCommentsInput
  upsert?: Prisma.InstituteUpsertWithoutCommentsInput
  disconnect?: Prisma.InstituteWhereInput | boolean
  delete?: Prisma.InstituteWhereInput | boolean
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutCommentsInput, Prisma.InstituteUpdateWithoutCommentsInput>, Prisma.InstituteUncheckedUpdateWithoutCommentsInput>
}

export type InstituteCreateNestedOneWithoutAssetsInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutAssetsInput, Prisma.InstituteUncheckedCreateWithoutAssetsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutAssetsInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneWithoutAssetsNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutAssetsInput, Prisma.InstituteUncheckedCreateWithoutAssetsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutAssetsInput
  upsert?: Prisma.InstituteUpsertWithoutAssetsInput
  disconnect?: Prisma.InstituteWhereInput | boolean
  delete?: Prisma.InstituteWhereInput | boolean
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutAssetsInput, Prisma.InstituteUpdateWithoutAssetsInput>, Prisma.InstituteUncheckedUpdateWithoutAssetsInput>
}

export type InstituteCreateNestedOneWithoutDepartmentsInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutDepartmentsInput, Prisma.InstituteUncheckedCreateWithoutDepartmentsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutDepartmentsInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneRequiredWithoutDepartmentsNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutDepartmentsInput, Prisma.InstituteUncheckedCreateWithoutDepartmentsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutDepartmentsInput
  upsert?: Prisma.InstituteUpsertWithoutDepartmentsInput
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutDepartmentsInput, Prisma.InstituteUpdateWithoutDepartmentsInput>, Prisma.InstituteUncheckedUpdateWithoutDepartmentsInput>
}

export type InstituteCreateNestedOneWithoutProgramsInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutProgramsInput, Prisma.InstituteUncheckedCreateWithoutProgramsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutProgramsInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneRequiredWithoutProgramsNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutProgramsInput, Prisma.InstituteUncheckedCreateWithoutProgramsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutProgramsInput
  upsert?: Prisma.InstituteUpsertWithoutProgramsInput
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutProgramsInput, Prisma.InstituteUpdateWithoutProgramsInput>, Prisma.InstituteUncheckedUpdateWithoutProgramsInput>
}

export type InstituteCreateNestedOneWithoutCoursesInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutCoursesInput, Prisma.InstituteUncheckedCreateWithoutCoursesInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutCoursesInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneRequiredWithoutCoursesNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutCoursesInput, Prisma.InstituteUncheckedCreateWithoutCoursesInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutCoursesInput
  upsert?: Prisma.InstituteUpsertWithoutCoursesInput
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutCoursesInput, Prisma.InstituteUpdateWithoutCoursesInput>, Prisma.InstituteUncheckedUpdateWithoutCoursesInput>
}

export type InstituteCreateNestedOneWithoutCohortsInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutCohortsInput, Prisma.InstituteUncheckedCreateWithoutCohortsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutCohortsInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneRequiredWithoutCohortsNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutCohortsInput, Prisma.InstituteUncheckedCreateWithoutCohortsInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutCohortsInput
  upsert?: Prisma.InstituteUpsertWithoutCohortsInput
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutCohortsInput, Prisma.InstituteUpdateWithoutCohortsInput>, Prisma.InstituteUncheckedUpdateWithoutCohortsInput>
}

export type InstituteCreateNestedOneWithoutFeeInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutFeeInput, Prisma.InstituteUncheckedCreateWithoutFeeInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutFeeInput
  connect?: Prisma.InstituteWhereUniqueInput
}

export type InstituteUpdateOneRequiredWithoutFeeNestedInput = {
  create?: Prisma.XOR<Prisma.InstituteCreateWithoutFeeInput, Prisma.InstituteUncheckedCreateWithoutFeeInput>
  connectOrCreate?: Prisma.InstituteCreateOrConnectWithoutFeeInput
  upsert?: Prisma.InstituteUpsertWithoutFeeInput
  connect?: Prisma.InstituteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.InstituteUpdateToOneWithWhereWithoutFeeInput, Prisma.InstituteUpdateWithoutFeeInput>, Prisma.InstituteUncheckedUpdateWithoutFeeInput>
}

export type InstituteCreateWithoutSettingsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutSettingsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutSettingsInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutSettingsInput, Prisma.InstituteUncheckedCreateWithoutSettingsInput>
}

export type InstituteUpsertWithoutSettingsInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutSettingsInput, Prisma.InstituteUncheckedUpdateWithoutSettingsInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutSettingsInput, Prisma.InstituteUncheckedCreateWithoutSettingsInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutSettingsInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutSettingsInput, Prisma.InstituteUncheckedUpdateWithoutSettingsInput>
}

export type InstituteUpdateWithoutSettingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutSettingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutIntegrationInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutIntegrationInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutIntegrationInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutIntegrationInput, Prisma.InstituteUncheckedCreateWithoutIntegrationInput>
}

export type InstituteUpsertWithoutIntegrationInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutIntegrationInput, Prisma.InstituteUncheckedUpdateWithoutIntegrationInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutIntegrationInput, Prisma.InstituteUncheckedCreateWithoutIntegrationInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutIntegrationInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutIntegrationInput, Prisma.InstituteUncheckedUpdateWithoutIntegrationInput>
}

export type InstituteUpdateWithoutIntegrationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutIntegrationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutConversationInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutConversationInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutConversationInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutConversationInput, Prisma.InstituteUncheckedCreateWithoutConversationInput>
}

export type InstituteUpsertWithoutConversationInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutConversationInput, Prisma.InstituteUncheckedUpdateWithoutConversationInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutConversationInput, Prisma.InstituteUncheckedCreateWithoutConversationInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutConversationInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutConversationInput, Prisma.InstituteUncheckedUpdateWithoutConversationInput>
}

export type InstituteUpdateWithoutConversationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutConversationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutNotificationInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutNotificationInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutNotificationInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutNotificationInput, Prisma.InstituteUncheckedCreateWithoutNotificationInput>
}

export type InstituteUpsertWithoutNotificationInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutNotificationInput, Prisma.InstituteUncheckedUpdateWithoutNotificationInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutNotificationInput, Prisma.InstituteUncheckedCreateWithoutNotificationInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutNotificationInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutNotificationInput, Prisma.InstituteUncheckedUpdateWithoutNotificationInput>
}

export type InstituteUpdateWithoutNotificationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutNotificationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutPostsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutPostsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutPostsInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutPostsInput, Prisma.InstituteUncheckedCreateWithoutPostsInput>
}

export type InstituteUpsertWithoutPostsInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutPostsInput, Prisma.InstituteUncheckedUpdateWithoutPostsInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutPostsInput, Prisma.InstituteUncheckedCreateWithoutPostsInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutPostsInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutPostsInput, Prisma.InstituteUncheckedUpdateWithoutPostsInput>
}

export type InstituteUpdateWithoutPostsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutPostsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutCommentsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutCommentsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutCommentsInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutCommentsInput, Prisma.InstituteUncheckedCreateWithoutCommentsInput>
}

export type InstituteUpsertWithoutCommentsInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutCommentsInput, Prisma.InstituteUncheckedUpdateWithoutCommentsInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutCommentsInput, Prisma.InstituteUncheckedCreateWithoutCommentsInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutCommentsInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutCommentsInput, Prisma.InstituteUncheckedUpdateWithoutCommentsInput>
}

export type InstituteUpdateWithoutCommentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutCommentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutAssetsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutAssetsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutAssetsInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutAssetsInput, Prisma.InstituteUncheckedCreateWithoutAssetsInput>
}

export type InstituteUpsertWithoutAssetsInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutAssetsInput, Prisma.InstituteUncheckedUpdateWithoutAssetsInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutAssetsInput, Prisma.InstituteUncheckedCreateWithoutAssetsInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutAssetsInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutAssetsInput, Prisma.InstituteUncheckedUpdateWithoutAssetsInput>
}

export type InstituteUpdateWithoutAssetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutAssetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutDepartmentsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutDepartmentsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutDepartmentsInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutDepartmentsInput, Prisma.InstituteUncheckedCreateWithoutDepartmentsInput>
}

export type InstituteUpsertWithoutDepartmentsInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutDepartmentsInput, Prisma.InstituteUncheckedUpdateWithoutDepartmentsInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutDepartmentsInput, Prisma.InstituteUncheckedCreateWithoutDepartmentsInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutDepartmentsInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutDepartmentsInput, Prisma.InstituteUncheckedUpdateWithoutDepartmentsInput>
}

export type InstituteUpdateWithoutDepartmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutDepartmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutProgramsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutProgramsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutProgramsInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutProgramsInput, Prisma.InstituteUncheckedCreateWithoutProgramsInput>
}

export type InstituteUpsertWithoutProgramsInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutProgramsInput, Prisma.InstituteUncheckedUpdateWithoutProgramsInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutProgramsInput, Prisma.InstituteUncheckedCreateWithoutProgramsInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutProgramsInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutProgramsInput, Prisma.InstituteUncheckedUpdateWithoutProgramsInput>
}

export type InstituteUpdateWithoutProgramsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutProgramsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutCoursesInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutCoursesInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutCoursesInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutCoursesInput, Prisma.InstituteUncheckedCreateWithoutCoursesInput>
}

export type InstituteUpsertWithoutCoursesInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutCoursesInput, Prisma.InstituteUncheckedUpdateWithoutCoursesInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutCoursesInput, Prisma.InstituteUncheckedCreateWithoutCoursesInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutCoursesInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutCoursesInput, Prisma.InstituteUncheckedUpdateWithoutCoursesInput>
}

export type InstituteUpdateWithoutCoursesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutCoursesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutCohortsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutCohortsInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Fee?: Prisma.FeeUncheckedCreateNestedManyWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutCohortsInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutCohortsInput, Prisma.InstituteUncheckedCreateWithoutCohortsInput>
}

export type InstituteUpsertWithoutCohortsInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutCohortsInput, Prisma.InstituteUncheckedUpdateWithoutCohortsInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutCohortsInput, Prisma.InstituteUncheckedCreateWithoutCohortsInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutCohortsInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutCohortsInput, Prisma.InstituteUncheckedUpdateWithoutCohortsInput>
}

export type InstituteUpdateWithoutCohortsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutCohortsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Fee?: Prisma.FeeUncheckedUpdateManyWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}

export type InstituteCreateWithoutFeeInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingCreateNestedOneWithoutInstituteInput
  Conversation?: Prisma.ConversationCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationCreateNestedManyWithoutInstituteInput
}

export type InstituteUncheckedCreateWithoutFeeInput = {
  id?: string
  name: string
  logo?: string | null
  timezone?: string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutInstituteInput
  comments?: Prisma.CommentUncheckedCreateNestedManyWithoutInstituteInput
  departments?: Prisma.DepartmentUncheckedCreateNestedManyWithoutInstituteInput
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutInstituteInput
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutInstituteInput
  cohorts?: Prisma.CohortUncheckedCreateNestedManyWithoutInstituteInput
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutInstituteInput
  settings?: Prisma.SettingUncheckedCreateNestedOneWithoutInstituteInput
  Conversation?: Prisma.ConversationUncheckedCreateNestedManyWithoutInstituteInput
  Notification?: Prisma.NotificationUncheckedCreateNestedManyWithoutInstituteInput
  Integration?: Prisma.IntegrationUncheckedCreateNestedManyWithoutInstituteInput
}

export type InstituteCreateOrConnectWithoutFeeInput = {
  where: Prisma.InstituteWhereUniqueInput
  create: Prisma.XOR<Prisma.InstituteCreateWithoutFeeInput, Prisma.InstituteUncheckedCreateWithoutFeeInput>
}

export type InstituteUpsertWithoutFeeInput = {
  update: Prisma.XOR<Prisma.InstituteUpdateWithoutFeeInput, Prisma.InstituteUncheckedUpdateWithoutFeeInput>
  create: Prisma.XOR<Prisma.InstituteCreateWithoutFeeInput, Prisma.InstituteUncheckedCreateWithoutFeeInput>
  where?: Prisma.InstituteWhereInput
}

export type InstituteUpdateToOneWithWhereWithoutFeeInput = {
  where?: Prisma.InstituteWhereInput
  data: Prisma.XOR<Prisma.InstituteUpdateWithoutFeeInput, Prisma.InstituteUncheckedUpdateWithoutFeeInput>
}

export type InstituteUpdateWithoutFeeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUpdateOneWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUpdateManyWithoutInstituteNestedInput
}

export type InstituteUncheckedUpdateWithoutFeeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutInstituteNestedInput
  comments?: Prisma.CommentUncheckedUpdateManyWithoutInstituteNestedInput
  departments?: Prisma.DepartmentUncheckedUpdateManyWithoutInstituteNestedInput
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutInstituteNestedInput
  courses?: Prisma.CourseUncheckedUpdateManyWithoutInstituteNestedInput
  cohorts?: Prisma.CohortUncheckedUpdateManyWithoutInstituteNestedInput
  assets?: Prisma.AssetUncheckedUpdateManyWithoutInstituteNestedInput
  settings?: Prisma.SettingUncheckedUpdateOneWithoutInstituteNestedInput
  Conversation?: Prisma.ConversationUncheckedUpdateManyWithoutInstituteNestedInput
  Notification?: Prisma.NotificationUncheckedUpdateManyWithoutInstituteNestedInput
  Integration?: Prisma.IntegrationUncheckedUpdateManyWithoutInstituteNestedInput
}


/**
 * Count Type InstituteCountOutputType
 */

export type InstituteCountOutputType = {
  posts: number
  comments: number
  departments: number
  programs: number
  courses: number
  cohorts: number
  assets: number
  Fee: number
  Conversation: number
  Notification: number
  Integration: number
}

export type InstituteCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  posts?: boolean | InstituteCountOutputTypeCountPostsArgs
  comments?: boolean | InstituteCountOutputTypeCountCommentsArgs
  departments?: boolean | InstituteCountOutputTypeCountDepartmentsArgs
  programs?: boolean | InstituteCountOutputTypeCountProgramsArgs
  courses?: boolean | InstituteCountOutputTypeCountCoursesArgs
  cohorts?: boolean | InstituteCountOutputTypeCountCohortsArgs
  assets?: boolean | InstituteCountOutputTypeCountAssetsArgs
  Fee?: boolean | InstituteCountOutputTypeCountFeeArgs
  Conversation?: boolean | InstituteCountOutputTypeCountConversationArgs
  Notification?: boolean | InstituteCountOutputTypeCountNotificationArgs
  Integration?: boolean | InstituteCountOutputTypeCountIntegrationArgs
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InstituteCountOutputType
   */
  select?: Prisma.InstituteCountOutputTypeSelect<ExtArgs> | null
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountPostsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PostWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountCommentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.CommentWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountDepartmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DepartmentWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountProgramsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountCoursesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.CourseWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountCohortsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.CohortWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountAssetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AssetWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountFeeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FeeWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountConversationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ConversationWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountNotificationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationWhereInput
}

/**
 * InstituteCountOutputType without action
 */
export type InstituteCountOutputTypeCountIntegrationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.IntegrationWhereInput
}


export type InstituteSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  logo?: boolean
  timezone?: boolean
  metadata?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  posts?: boolean | Prisma.Institute$postsArgs<ExtArgs>
  comments?: boolean | Prisma.Institute$commentsArgs<ExtArgs>
  departments?: boolean | Prisma.Institute$departmentsArgs<ExtArgs>
  programs?: boolean | Prisma.Institute$programsArgs<ExtArgs>
  courses?: boolean | Prisma.Institute$coursesArgs<ExtArgs>
  cohorts?: boolean | Prisma.Institute$cohortsArgs<ExtArgs>
  assets?: boolean | Prisma.Institute$assetsArgs<ExtArgs>
  settings?: boolean | Prisma.Institute$settingsArgs<ExtArgs>
  Fee?: boolean | Prisma.Institute$FeeArgs<ExtArgs>
  Conversation?: boolean | Prisma.Institute$ConversationArgs<ExtArgs>
  Notification?: boolean | Prisma.Institute$NotificationArgs<ExtArgs>
  Integration?: boolean | Prisma.Institute$IntegrationArgs<ExtArgs>
  _count?: boolean | Prisma.InstituteCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["institute"]>

export type InstituteSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  logo?: boolean
  timezone?: boolean
  metadata?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["institute"]>

export type InstituteSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  logo?: boolean
  timezone?: boolean
  metadata?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["institute"]>

export type InstituteSelectScalar = {
  id?: boolean
  name?: boolean
  logo?: boolean
  timezone?: boolean
  metadata?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type InstituteOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "logo" | "timezone" | "metadata" | "createdAt" | "updatedAt", ExtArgs["result"]["institute"]>
export type InstituteInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  posts?: boolean | Prisma.Institute$postsArgs<ExtArgs>
  comments?: boolean | Prisma.Institute$commentsArgs<ExtArgs>
  departments?: boolean | Prisma.Institute$departmentsArgs<ExtArgs>
  programs?: boolean | Prisma.Institute$programsArgs<ExtArgs>
  courses?: boolean | Prisma.Institute$coursesArgs<ExtArgs>
  cohorts?: boolean | Prisma.Institute$cohortsArgs<ExtArgs>
  assets?: boolean | Prisma.Institute$assetsArgs<ExtArgs>
  settings?: boolean | Prisma.Institute$settingsArgs<ExtArgs>
  Fee?: boolean | Prisma.Institute$FeeArgs<ExtArgs>
  Conversation?: boolean | Prisma.Institute$ConversationArgs<ExtArgs>
  Notification?: boolean | Prisma.Institute$NotificationArgs<ExtArgs>
  Integration?: boolean | Prisma.Institute$IntegrationArgs<ExtArgs>
  _count?: boolean | Prisma.InstituteCountOutputTypeDefaultArgs<ExtArgs>
}
export type InstituteIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type InstituteIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $InstitutePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Institute"
  objects: {
    posts: Prisma.$PostPayload<ExtArgs>[]
    comments: Prisma.$CommentPayload<ExtArgs>[]
    departments: Prisma.$DepartmentPayload<ExtArgs>[]
    programs: Prisma.$ProgramPayload<ExtArgs>[]
    courses: Prisma.$CoursePayload<ExtArgs>[]
    cohorts: Prisma.$CohortPayload<ExtArgs>[]
    assets: Prisma.$AssetPayload<ExtArgs>[]
    settings: Prisma.$SettingPayload<ExtArgs> | null
    Fee: Prisma.$FeePayload<ExtArgs>[]
    Conversation: Prisma.$ConversationPayload<ExtArgs>[]
    Notification: Prisma.$NotificationPayload<ExtArgs>[]
    Integration: Prisma.$IntegrationPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    logo: string | null
    timezone: string | null
    metadata: runtime.JsonValue | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["institute"]>
  composites: {}
}

export type InstituteGetPayload<S extends boolean | null | undefined | InstituteDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$InstitutePayload, S>

export type InstituteCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<InstituteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: InstituteCountAggregateInputType | true
  }

export interface InstituteDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Institute'], meta: { name: 'Institute' } }
  /**
   * Find zero or one Institute that matches the filter.
   * @param {InstituteFindUniqueArgs} args - Arguments to find a Institute
   * @example
   * // Get one Institute
   * const institute = await prisma.institute.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InstituteFindUniqueArgs>(args: Prisma.SelectSubset<T, InstituteFindUniqueArgs<ExtArgs>>): Prisma.Prisma__InstituteClient<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Institute that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InstituteFindUniqueOrThrowArgs} args - Arguments to find a Institute
   * @example
   * // Get one Institute
   * const institute = await prisma.institute.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InstituteFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, InstituteFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__InstituteClient<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Institute that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstituteFindFirstArgs} args - Arguments to find a Institute
   * @example
   * // Get one Institute
   * const institute = await prisma.institute.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InstituteFindFirstArgs>(args?: Prisma.SelectSubset<T, InstituteFindFirstArgs<ExtArgs>>): Prisma.Prisma__InstituteClient<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Institute that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstituteFindFirstOrThrowArgs} args - Arguments to find a Institute
   * @example
   * // Get one Institute
   * const institute = await prisma.institute.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InstituteFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, InstituteFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__InstituteClient<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Institutes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstituteFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Institutes
   * const institutes = await prisma.institute.findMany()
   * 
   * // Get first 10 Institutes
   * const institutes = await prisma.institute.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const instituteWithIdOnly = await prisma.institute.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends InstituteFindManyArgs>(args?: Prisma.SelectSubset<T, InstituteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Institute.
   * @param {InstituteCreateArgs} args - Arguments to create a Institute.
   * @example
   * // Create one Institute
   * const Institute = await prisma.institute.create({
   *   data: {
   *     // ... data to create a Institute
   *   }
   * })
   * 
   */
  create<T extends InstituteCreateArgs>(args: Prisma.SelectSubset<T, InstituteCreateArgs<ExtArgs>>): Prisma.Prisma__InstituteClient<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Institutes.
   * @param {InstituteCreateManyArgs} args - Arguments to create many Institutes.
   * @example
   * // Create many Institutes
   * const institute = await prisma.institute.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends InstituteCreateManyArgs>(args?: Prisma.SelectSubset<T, InstituteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Institutes and returns the data saved in the database.
   * @param {InstituteCreateManyAndReturnArgs} args - Arguments to create many Institutes.
   * @example
   * // Create many Institutes
   * const institute = await prisma.institute.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Institutes and only return the `id`
   * const instituteWithIdOnly = await prisma.institute.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends InstituteCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, InstituteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Institute.
   * @param {InstituteDeleteArgs} args - Arguments to delete one Institute.
   * @example
   * // Delete one Institute
   * const Institute = await prisma.institute.delete({
   *   where: {
   *     // ... filter to delete one Institute
   *   }
   * })
   * 
   */
  delete<T extends InstituteDeleteArgs>(args: Prisma.SelectSubset<T, InstituteDeleteArgs<ExtArgs>>): Prisma.Prisma__InstituteClient<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Institute.
   * @param {InstituteUpdateArgs} args - Arguments to update one Institute.
   * @example
   * // Update one Institute
   * const institute = await prisma.institute.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends InstituteUpdateArgs>(args: Prisma.SelectSubset<T, InstituteUpdateArgs<ExtArgs>>): Prisma.Prisma__InstituteClient<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Institutes.
   * @param {InstituteDeleteManyArgs} args - Arguments to filter Institutes to delete.
   * @example
   * // Delete a few Institutes
   * const { count } = await prisma.institute.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends InstituteDeleteManyArgs>(args?: Prisma.SelectSubset<T, InstituteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Institutes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstituteUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Institutes
   * const institute = await prisma.institute.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends InstituteUpdateManyArgs>(args: Prisma.SelectSubset<T, InstituteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Institutes and returns the data updated in the database.
   * @param {InstituteUpdateManyAndReturnArgs} args - Arguments to update many Institutes.
   * @example
   * // Update many Institutes
   * const institute = await prisma.institute.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Institutes and only return the `id`
   * const instituteWithIdOnly = await prisma.institute.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends InstituteUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, InstituteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Institute.
   * @param {InstituteUpsertArgs} args - Arguments to update or create a Institute.
   * @example
   * // Update or create a Institute
   * const institute = await prisma.institute.upsert({
   *   create: {
   *     // ... data to create a Institute
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Institute we want to update
   *   }
   * })
   */
  upsert<T extends InstituteUpsertArgs>(args: Prisma.SelectSubset<T, InstituteUpsertArgs<ExtArgs>>): Prisma.Prisma__InstituteClient<runtime.Types.Result.GetResult<Prisma.$InstitutePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Institutes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstituteCountArgs} args - Arguments to filter Institutes to count.
   * @example
   * // Count the number of Institutes
   * const count = await prisma.institute.count({
   *   where: {
   *     // ... the filter for the Institutes we want to count
   *   }
   * })
  **/
  count<T extends InstituteCountArgs>(
    args?: Prisma.Subset<T, InstituteCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], InstituteCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Institute.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstituteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends InstituteAggregateArgs>(args: Prisma.Subset<T, InstituteAggregateArgs>): Prisma.PrismaPromise<GetInstituteAggregateType<T>>

  /**
   * Group by Institute.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstituteGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends InstituteGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InstituteGroupByArgs['orderBy'] }
      : { orderBy?: InstituteGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, InstituteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstituteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Institute model
 */
readonly fields: InstituteFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Institute.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InstituteClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  posts<T extends Prisma.Institute$postsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$postsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  comments<T extends Prisma.Institute$commentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  departments<T extends Prisma.Institute$departmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$departmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  programs<T extends Prisma.Institute$programsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$programsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  courses<T extends Prisma.Institute$coursesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$coursesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  cohorts<T extends Prisma.Institute$cohortsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$cohortsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CohortPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  assets<T extends Prisma.Institute$assetsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$assetsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  settings<T extends Prisma.Institute$settingsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$settingsArgs<ExtArgs>>): Prisma.Prisma__SettingClient<runtime.Types.Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Fee<T extends Prisma.Institute$FeeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$FeeArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Conversation<T extends Prisma.Institute$ConversationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$ConversationArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Notification<T extends Prisma.Institute$NotificationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$NotificationArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Integration<T extends Prisma.Institute$IntegrationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Institute$IntegrationArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$IntegrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Institute model
 */
export interface InstituteFieldRefs {
  readonly id: Prisma.FieldRef<"Institute", 'String'>
  readonly name: Prisma.FieldRef<"Institute", 'String'>
  readonly logo: Prisma.FieldRef<"Institute", 'String'>
  readonly timezone: Prisma.FieldRef<"Institute", 'String'>
  readonly metadata: Prisma.FieldRef<"Institute", 'Json'>
  readonly createdAt: Prisma.FieldRef<"Institute", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Institute", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Institute findUnique
 */
export type InstituteFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * Filter, which Institute to fetch.
   */
  where: Prisma.InstituteWhereUniqueInput
}

/**
 * Institute findUniqueOrThrow
 */
export type InstituteFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * Filter, which Institute to fetch.
   */
  where: Prisma.InstituteWhereUniqueInput
}

/**
 * Institute findFirst
 */
export type InstituteFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * Filter, which Institute to fetch.
   */
  where?: Prisma.InstituteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Institutes to fetch.
   */
  orderBy?: Prisma.InstituteOrderByWithRelationInput | Prisma.InstituteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Institutes.
   */
  cursor?: Prisma.InstituteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Institutes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Institutes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Institutes.
   */
  distinct?: Prisma.InstituteScalarFieldEnum | Prisma.InstituteScalarFieldEnum[]
}

/**
 * Institute findFirstOrThrow
 */
export type InstituteFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * Filter, which Institute to fetch.
   */
  where?: Prisma.InstituteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Institutes to fetch.
   */
  orderBy?: Prisma.InstituteOrderByWithRelationInput | Prisma.InstituteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Institutes.
   */
  cursor?: Prisma.InstituteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Institutes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Institutes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Institutes.
   */
  distinct?: Prisma.InstituteScalarFieldEnum | Prisma.InstituteScalarFieldEnum[]
}

/**
 * Institute findMany
 */
export type InstituteFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * Filter, which Institutes to fetch.
   */
  where?: Prisma.InstituteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Institutes to fetch.
   */
  orderBy?: Prisma.InstituteOrderByWithRelationInput | Prisma.InstituteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Institutes.
   */
  cursor?: Prisma.InstituteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Institutes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Institutes.
   */
  skip?: number
  distinct?: Prisma.InstituteScalarFieldEnum | Prisma.InstituteScalarFieldEnum[]
}

/**
 * Institute create
 */
export type InstituteCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * The data needed to create a Institute.
   */
  data: Prisma.XOR<Prisma.InstituteCreateInput, Prisma.InstituteUncheckedCreateInput>
}

/**
 * Institute createMany
 */
export type InstituteCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Institutes.
   */
  data: Prisma.InstituteCreateManyInput | Prisma.InstituteCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Institute createManyAndReturn
 */
export type InstituteCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * The data used to create many Institutes.
   */
  data: Prisma.InstituteCreateManyInput | Prisma.InstituteCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Institute update
 */
export type InstituteUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * The data needed to update a Institute.
   */
  data: Prisma.XOR<Prisma.InstituteUpdateInput, Prisma.InstituteUncheckedUpdateInput>
  /**
   * Choose, which Institute to update.
   */
  where: Prisma.InstituteWhereUniqueInput
}

/**
 * Institute updateMany
 */
export type InstituteUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Institutes.
   */
  data: Prisma.XOR<Prisma.InstituteUpdateManyMutationInput, Prisma.InstituteUncheckedUpdateManyInput>
  /**
   * Filter which Institutes to update
   */
  where?: Prisma.InstituteWhereInput
  /**
   * Limit how many Institutes to update.
   */
  limit?: number
}

/**
 * Institute updateManyAndReturn
 */
export type InstituteUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * The data used to update Institutes.
   */
  data: Prisma.XOR<Prisma.InstituteUpdateManyMutationInput, Prisma.InstituteUncheckedUpdateManyInput>
  /**
   * Filter which Institutes to update
   */
  where?: Prisma.InstituteWhereInput
  /**
   * Limit how many Institutes to update.
   */
  limit?: number
}

/**
 * Institute upsert
 */
export type InstituteUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * The filter to search for the Institute to update in case it exists.
   */
  where: Prisma.InstituteWhereUniqueInput
  /**
   * In case the Institute found by the `where` argument doesn't exist, create a new Institute with this data.
   */
  create: Prisma.XOR<Prisma.InstituteCreateInput, Prisma.InstituteUncheckedCreateInput>
  /**
   * In case the Institute was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.InstituteUpdateInput, Prisma.InstituteUncheckedUpdateInput>
}

/**
 * Institute delete
 */
export type InstituteDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
  /**
   * Filter which Institute to delete.
   */
  where: Prisma.InstituteWhereUniqueInput
}

/**
 * Institute deleteMany
 */
export type InstituteDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Institutes to delete
   */
  where?: Prisma.InstituteWhereInput
  /**
   * Limit how many Institutes to delete.
   */
  limit?: number
}

/**
 * Institute.posts
 */
export type Institute$postsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Post
   */
  select?: Prisma.PostSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Post
   */
  omit?: Prisma.PostOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostInclude<ExtArgs> | null
  where?: Prisma.PostWhereInput
  orderBy?: Prisma.PostOrderByWithRelationInput | Prisma.PostOrderByWithRelationInput[]
  cursor?: Prisma.PostWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PostScalarFieldEnum | Prisma.PostScalarFieldEnum[]
}

/**
 * Institute.comments
 */
export type Institute$commentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Comment
   */
  select?: Prisma.CommentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Comment
   */
  omit?: Prisma.CommentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CommentInclude<ExtArgs> | null
  where?: Prisma.CommentWhereInput
  orderBy?: Prisma.CommentOrderByWithRelationInput | Prisma.CommentOrderByWithRelationInput[]
  cursor?: Prisma.CommentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CommentScalarFieldEnum | Prisma.CommentScalarFieldEnum[]
}

/**
 * Institute.departments
 */
export type Institute$departmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Department
   */
  select?: Prisma.DepartmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Department
   */
  omit?: Prisma.DepartmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartmentInclude<ExtArgs> | null
  where?: Prisma.DepartmentWhereInput
  orderBy?: Prisma.DepartmentOrderByWithRelationInput | Prisma.DepartmentOrderByWithRelationInput[]
  cursor?: Prisma.DepartmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.DepartmentScalarFieldEnum | Prisma.DepartmentScalarFieldEnum[]
}

/**
 * Institute.programs
 */
export type Institute$programsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  where?: Prisma.ProgramWhereInput
  orderBy?: Prisma.ProgramOrderByWithRelationInput | Prisma.ProgramOrderByWithRelationInput[]
  cursor?: Prisma.ProgramWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProgramScalarFieldEnum | Prisma.ProgramScalarFieldEnum[]
}

/**
 * Institute.courses
 */
export type Institute$coursesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Course
   */
  select?: Prisma.CourseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Course
   */
  omit?: Prisma.CourseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CourseInclude<ExtArgs> | null
  where?: Prisma.CourseWhereInput
  orderBy?: Prisma.CourseOrderByWithRelationInput | Prisma.CourseOrderByWithRelationInput[]
  cursor?: Prisma.CourseWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CourseScalarFieldEnum | Prisma.CourseScalarFieldEnum[]
}

/**
 * Institute.cohorts
 */
export type Institute$cohortsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Cohort
   */
  select?: Prisma.CohortSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Cohort
   */
  omit?: Prisma.CohortOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CohortInclude<ExtArgs> | null
  where?: Prisma.CohortWhereInput
  orderBy?: Prisma.CohortOrderByWithRelationInput | Prisma.CohortOrderByWithRelationInput[]
  cursor?: Prisma.CohortWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CohortScalarFieldEnum | Prisma.CohortScalarFieldEnum[]
}

/**
 * Institute.assets
 */
export type Institute$assetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Asset
   */
  select?: Prisma.AssetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Asset
   */
  omit?: Prisma.AssetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AssetInclude<ExtArgs> | null
  where?: Prisma.AssetWhereInput
  orderBy?: Prisma.AssetOrderByWithRelationInput | Prisma.AssetOrderByWithRelationInput[]
  cursor?: Prisma.AssetWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AssetScalarFieldEnum | Prisma.AssetScalarFieldEnum[]
}

/**
 * Institute.settings
 */
export type Institute$settingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Setting
   */
  select?: Prisma.SettingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Setting
   */
  omit?: Prisma.SettingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SettingInclude<ExtArgs> | null
  where?: Prisma.SettingWhereInput
}

/**
 * Institute.Fee
 */
export type Institute$FeeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Fee
   */
  select?: Prisma.FeeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Fee
   */
  omit?: Prisma.FeeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FeeInclude<ExtArgs> | null
  where?: Prisma.FeeWhereInput
  orderBy?: Prisma.FeeOrderByWithRelationInput | Prisma.FeeOrderByWithRelationInput[]
  cursor?: Prisma.FeeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FeeScalarFieldEnum | Prisma.FeeScalarFieldEnum[]
}

/**
 * Institute.Conversation
 */
export type Institute$ConversationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Conversation
   */
  select?: Prisma.ConversationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Conversation
   */
  omit?: Prisma.ConversationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConversationInclude<ExtArgs> | null
  where?: Prisma.ConversationWhereInput
  orderBy?: Prisma.ConversationOrderByWithRelationInput | Prisma.ConversationOrderByWithRelationInput[]
  cursor?: Prisma.ConversationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ConversationScalarFieldEnum | Prisma.ConversationScalarFieldEnum[]
}

/**
 * Institute.Notification
 */
export type Institute$NotificationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?: Prisma.NotificationOrderByWithRelationInput | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[]
}

/**
 * Institute.Integration
 */
export type Institute$IntegrationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Integration
   */
  select?: Prisma.IntegrationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Integration
   */
  omit?: Prisma.IntegrationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.IntegrationInclude<ExtArgs> | null
  where?: Prisma.IntegrationWhereInput
  orderBy?: Prisma.IntegrationOrderByWithRelationInput | Prisma.IntegrationOrderByWithRelationInput[]
  cursor?: Prisma.IntegrationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.IntegrationScalarFieldEnum | Prisma.IntegrationScalarFieldEnum[]
}

/**
 * Institute without action
 */
export type InstituteDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Institute
   */
  select?: Prisma.InstituteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Institute
   */
  omit?: Prisma.InstituteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstituteInclude<ExtArgs> | null
}
